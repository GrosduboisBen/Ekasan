{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.actionSignup = exports.actionLogin = exports.actionAuth = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _constants = require(\"../constants\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _config = require(\"../../config.js\");\n\nvar actionSignup = function actionSignup(name, first_name, last_name, email, password) {\n  console.log(\"Action: Inscription\");\n  return function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (dispatch) {\n      try {\n        var formdata = new FormData();\n        formdata.append(\"name\", \"Bebou\");\n        formdata.append(\"first_name\", \"B\");\n        formdata.append(\"last_name\", \"Bou\");\n        formdata.append(\"password\", \"password\");\n        formdata.append(\"username\", \"Bebou\");\n        var requestOptions = {\n          method: 'POST',\n          body: formdata\n        };\n        var response = yield fetch(_config.BASE_URL + \"/user/create/\", requestOptions);\n        var responseData = yield response.json();\n\n        if (!response.ok) {\n          console.log(\"FAILED\");\n          throw new Error(JSON.stringify(responseData));\n        } else {\n          console.log(\"OK\");\n          return responseData;\n        }\n      } catch (error) {\n        throw error;\n      }\n    });\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexports.actionSignup = actionSignup;\n\nvar actionAuth = function actionAuth() {\n  console.log(\"Action: Auth\");\n  return function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (dispatch) {\n      try {\n        var requestOptions = {\n          method: 'GET'\n        };\n        var response = yield fetch(_config.BASE_URL + \"/auth\", requestOptions);\n        var responseData = yield response.json();\n\n        if (!response.ok) {\n          console.log(\"FAILED\");\n          throw new Error(JSON.stringify(responseData));\n        } else {\n          console.log(\"OK\");\n          return responseData;\n        }\n      } catch (error) {\n        throw error;\n      }\n    });\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nexports.actionAuth = actionAuth;\n\nvar actionLogin = function actionLogin(username, password, grant_type, client_id, client_secret) {\n  console.log(\"Action: Login\");\n  return function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (dispatch) {\n      var authenticationError = false;\n      var authenticationData = \"\";\n\n      try {\n        var response = yield dispatch(actionAuth());\n        authenticationData = response;\n        console.log(response);\n\n        if (response.hashed == true) {\n          throw new Error(\"We cannot do the login request because the auth request contains a secret hashed instead of a non-scret hashed. Please contact the administrator.\");\n        }\n      } catch (error) {\n        authenticationError = true;\n        alert(error);\n      }\n\n      console.log(\"authenticationError sur auth :\" + authenticationError);\n\n      if (authenticationError == false && authenticationData != '') {\n        try {\n          var myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n          var qs = require('qs');\n\n          var urlencoded = qs.stringify({\n            'grant_type': 'password',\n            'username': 'admin',\n            'password': '1fS\"lu],)@?9',\n            'client_id': authenticationData.client_id,\n            'client_secret': authenticationData.secret\n          });\n          var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: urlencoded\n          };\n\n          var _response = yield fetch(_config.BASE_URL + \"/login/\", requestOptions);\n\n          var responseData = yield _response.json();\n\n          if (!_response.ok) {\n            console.log(\"FAILED\");\n            console.log(JSON.stringify(_response));\n            throw new Error(JSON.stringify(responseData));\n          } else {\n            console.log(\"OK\");\n            saveToAsyncStorage(responseData.access_token);\n            return responseData;\n          }\n        } catch (error) {\n          throw error;\n        }\n      }\n    });\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nexports.actionLogin = actionLogin;\n\nvar saveToAsyncStorage = function () {\n  var _ref4 = (0, _asyncToGenerator2.default)(function* (token) {\n    console.log(\"Save Token To Async Storage\");\n    console.log(token);\n    yield _asyncStorage.default.setItem(\"access_token\", token);\n  });\n\n  return function saveToAsyncStorage(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar actionAuthUser = function actionAuthUser(token) {\n  console.log(\"Action: AuthUser\");\n  return {\n    type: _constants.AUTH_USER,\n    token: token\n  };\n};","map":{"version":3,"names":["actionSignup","name","first_name","last_name","email","password","console","log","dispatch","formdata","FormData","append","requestOptions","method","body","response","fetch","BASE_URL","responseData","json","ok","Error","JSON","stringify","error","actionAuth","actionLogin","username","grant_type","client_id","client_secret","authenticationError","authenticationData","hashed","alert","myHeaders","Headers","qs","require","urlencoded","secret","headers","saveToAsyncStorage","access_token","token","AsyncStorage","setItem","actionAuthUser","type","AUTH_USER"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/redux/actions/actionAuths.js"],"sourcesContent":["import { AUTH_USER } from \"../constants\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { BASE_URL } from \"../../config.js\";\n// Registration\nexport const actionSignup = (name, first_name, last_name, email, password) => {\n    console.log(\"Action: Inscription\")\n    return async (dispatch) => {\n        try {\n            var formdata = new FormData();\n            formdata.append(\"name\", \"Bebou\");\n            formdata.append(\"first_name\", \"B\");\n            formdata.append(\"last_name\", \"Bou\");\n            formdata.append(\"password\", \"password\");\n            formdata.append(\"username\", \"Bebou\");\n    \n            var requestOptions = {\n            method: 'POST',\n            body: formdata,\n            };\n    \n            const response = await fetch( BASE_URL + \"/user/create/\", requestOptions);\n            const responseData = await response.json();\n\n            if (!response.ok) {\n                console.log(\"FAILED\")\n                //console.log(responseData)\n                throw new Error(JSON.stringify(responseData))\n            } else {\n                console.log(\"OK\")\n               return responseData\n            }\n        } catch(error) {\n            throw error\n        }\n    } \n}\n\n// Auth\nexport const actionAuth = () => {\n    console.log(\"Action: Auth\")\n    return async (dispatch) => {\n        try {\n            var requestOptions = {\n            method: 'GET',\n            };\n    \n            const response = await fetch( BASE_URL + \"/auth\", requestOptions);\n            const responseData = await response.json();\n\n            if (!response.ok) {\n                console.log(\"FAILED\")\n                //console.log(responseData)\n                throw new Error(JSON.stringify(responseData))\n            } else {\n                console.log(\"OK\")\n               return responseData\n            }\n        } catch (error) {\n            throw error\n        }\n    }\n}\n\n// Login\nexport const actionLogin = (username, password, grant_type, client_id, client_secret) => {\n    console.log(\"Action: Login\")\n    return async (dispatch) => {\n        let authenticationError = false;\n        let authenticationData = \"\";\n        try {\n            const response = await dispatch(actionAuth());\n            authenticationData = response;\n            console.log(response);\n            if (response.hashed == true) {\n                throw new Error(\"We cannot do the login request because the auth request contains a secret hashed instead of a non-scret hashed. Please contact the administrator.\")\n            }\n        } catch (error) {\n            authenticationError = true;\n            alert(error);\n        }\n\n        console.log(\"authenticationError sur auth :\" + authenticationError)\n        if (authenticationError == false && authenticationData != '') {\n            try {\n                var myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    \n                const qs = require('qs');\n                let urlencoded = qs.stringify({\n                'grant_type': 'password',\n                'username': 'admin',\n                'password': '1fS\"lu],)@?9',\n                'client_id': authenticationData.client_id,\n                'client_secret': authenticationData.secret \n                });\n    \n    \n                var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: urlencoded,\n                \n                };\n                \n                const response = await fetch(BASE_URL + \"/login/\", requestOptions)\n                const responseData = await response.json();\n    \n                if (!response.ok) {\n                    console.log(\"FAILED\")\n                    console.log(JSON.stringify(response))\n                    throw new Error(JSON.stringify(responseData))\n                } else {\n                    console.log(\"OK\")\n                    saveToAsyncStorage(responseData.access_token)\n                   return responseData\n                }\n            } catch (error) {\n                throw error\n            }\n        }\n    }\n}\n\n// Enregistrer la data dans AsyncStorage\nconst saveToAsyncStorage = async (token) => {\n    console.log(\"Save Token To Async Storage\")\n    console.log(token)\n    await AsyncStorage.setItem(\"access_token\", token)\n}\n\n//Auth action\nconst actionAuthUser = ( token) =>{\n    console.log(\"Action: AuthUser\")\n    return{\n        type: AUTH_USER,\n        token: token\n    }\n}\n"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,UAAP,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,QAArC,EAAkD;EAC1EC,OAAO,CAACC,GAAR,CAAY,qBAAZ;EACA;IAAA,2CAAO,WAAOC,QAAP,EAAoB;MACvB,IAAI;QACA,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;QACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,OAAxB;QACAF,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,GAA9B;QACAF,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAA7B;QACAF,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,UAA5B;QACAF,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,OAA5B;QAEA,IAAIC,cAAc,GAAG;UACrBC,MAAM,EAAE,MADa;UAErBC,IAAI,EAAEL;QAFe,CAArB;QAKA,IAAMM,QAAQ,SAASC,KAAK,CAAEC,gBAAA,GAAW,eAAb,EAA8BL,cAA9B,CAA5B;QACA,IAAMM,YAAY,SAASH,QAAQ,CAACI,IAAT,EAA3B;;QAEA,IAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;UACdd,OAAO,CAACC,GAAR,CAAY,QAAZ;UAEA,MAAM,IAAIc,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAV,CAAN;QACH,CAJD,MAIO;UACHZ,OAAO,CAACC,GAAR,CAAY,IAAZ;UACD,OAAOW,YAAP;QACF;MACJ,CAxBD,CAwBE,OAAMM,KAAN,EAAa;QACX,MAAMA,KAAN;MACH;IACJ,CA5BD;;IAAA;MAAA;IAAA;EAAA;AA6BH,CA/BM;;;;AAkCA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EAC5BnB,OAAO,CAACC,GAAR,CAAY,cAAZ;EACA;IAAA,4CAAO,WAAOC,QAAP,EAAoB;MACvB,IAAI;QACA,IAAII,cAAc,GAAG;UACrBC,MAAM,EAAE;QADa,CAArB;QAIA,IAAME,QAAQ,SAASC,KAAK,CAAEC,gBAAA,GAAW,OAAb,EAAsBL,cAAtB,CAA5B;QACA,IAAMM,YAAY,SAASH,QAAQ,CAACI,IAAT,EAA3B;;QAEA,IAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;UACdd,OAAO,CAACC,GAAR,CAAY,QAAZ;UAEA,MAAM,IAAIc,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAV,CAAN;QACH,CAJD,MAIO;UACHZ,OAAO,CAACC,GAAR,CAAY,IAAZ;UACD,OAAOW,YAAP;QACF;MACJ,CAhBD,CAgBE,OAAOM,KAAP,EAAc;QACZ,MAAMA,KAAN;MACH;IACJ,CApBD;;IAAA;MAAA;IAAA;EAAA;AAqBH,CAvBM;;;;AA0BA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWtB,QAAX,EAAqBuB,UAArB,EAAiCC,SAAjC,EAA4CC,aAA5C,EAA8D;EACrFxB,OAAO,CAACC,GAAR,CAAY,eAAZ;EACA;IAAA,4CAAO,WAAOC,QAAP,EAAoB;MACvB,IAAIuB,mBAAmB,GAAG,KAA1B;MACA,IAAIC,kBAAkB,GAAG,EAAzB;;MACA,IAAI;QACA,IAAMjB,QAAQ,SAASP,QAAQ,CAACiB,UAAU,EAAX,CAA/B;QACAO,kBAAkB,GAAGjB,QAArB;QACAT,OAAO,CAACC,GAAR,CAAYQ,QAAZ;;QACA,IAAIA,QAAQ,CAACkB,MAAT,IAAmB,IAAvB,EAA6B;UACzB,MAAM,IAAIZ,KAAJ,CAAU,mJAAV,CAAN;QACH;MACJ,CAPD,CAOE,OAAOG,KAAP,EAAc;QACZO,mBAAmB,GAAG,IAAtB;QACAG,KAAK,CAACV,KAAD,CAAL;MACH;;MAEDlB,OAAO,CAACC,GAAR,CAAY,mCAAmCwB,mBAA/C;;MACA,IAAIA,mBAAmB,IAAI,KAAvB,IAAgCC,kBAAkB,IAAI,EAA1D,EAA8D;QAC1D,IAAI;UACA,IAAIG,SAAS,GAAG,IAAIC,OAAJ,EAAhB;UACAD,SAAS,CAACxB,MAAV,CAAiB,cAAjB,EAAiC,mCAAjC;;UAEA,IAAM0B,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;UACA,IAAIC,UAAU,GAAGF,EAAE,CAACd,SAAH,CAAa;YAC9B,cAAc,UADgB;YAE9B,YAAY,OAFkB;YAG9B,YAAY,cAHkB;YAI9B,aAAaS,kBAAkB,CAACH,SAJF;YAK9B,iBAAiBG,kBAAkB,CAACQ;UALN,CAAb,CAAjB;UASA,IAAI5B,cAAc,GAAG;YACrBC,MAAM,EAAE,MADa;YAErB4B,OAAO,EAAEN,SAFY;YAGrBrB,IAAI,EAAEyB;UAHe,CAArB;;UAOA,IAAMxB,SAAQ,SAASC,KAAK,CAACC,gBAAA,GAAW,SAAZ,EAAuBL,cAAvB,CAA5B;;UACA,IAAMM,YAAY,SAASH,SAAQ,CAACI,IAAT,EAA3B;;UAEA,IAAI,CAACJ,SAAQ,CAACK,EAAd,EAAkB;YACdd,OAAO,CAACC,GAAR,CAAY,QAAZ;YACAD,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,SAAL,CAAeR,SAAf,CAAZ;YACA,MAAM,IAAIM,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAV,CAAN;UACH,CAJD,MAIO;YACHZ,OAAO,CAACC,GAAR,CAAY,IAAZ;YACAmC,kBAAkB,CAACxB,YAAY,CAACyB,YAAd,CAAlB;YACD,OAAOzB,YAAP;UACF;QACJ,CAjCD,CAiCE,OAAOM,KAAP,EAAc;UACZ,MAAMA,KAAN;QACH;MACJ;IACJ,CAtDD;;IAAA;MAAA;IAAA;EAAA;AAuDH,CAzDM;;;;AA4DP,IAAMkB,kBAAkB;EAAA,4CAAG,WAAOE,KAAP,EAAiB;IACxCtC,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACAD,OAAO,CAACC,GAAR,CAAYqC,KAAZ;IACA,MAAMC,qBAAA,CAAaC,OAAb,CAAqB,cAArB,EAAqCF,KAArC,CAAN;EACH,CAJuB;;EAAA,gBAAlBF,kBAAkB;IAAA;EAAA;AAAA,GAAxB;;AAOA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAEH,KAAF,EAAW;EAC9BtC,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACA,OAAM;IACFyC,IAAI,EAAEC,oBADJ;IAEFL,KAAK,EAAEA;EAFL,CAAN;AAIH,CAND"},"metadata":{},"sourceType":"script","externalDependencies":[]}