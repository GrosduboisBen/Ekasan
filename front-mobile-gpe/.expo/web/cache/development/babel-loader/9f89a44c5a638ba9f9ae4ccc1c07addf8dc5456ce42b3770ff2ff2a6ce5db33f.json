{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"children\", \"negativeButton\", \"positiveButton\", \"message\", \"messageStyle\"];\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native\");\n\nvar Dialog_1 = __importDefault(require(\"./Dialog\"));\n\nvar TouchableEffect_1 = __importDefault(require(\"./TouchableEffect\"));\n\nvar OS = react_native_1.Platform.OS;\nvar DEFAULT_COLOR_BUTTON = '#0000FF99';\nvar DEFAULT_BACKGROUND_COLOR_BUTTON = 'transparent';\n\nvar getButtonBackgroundColor = function getButtonBackgroundColor(buttonProps) {\n  var style = buttonProps.style,\n      disabled = buttonProps.disabled;\n\n  if (!style) {\n    return DEFAULT_BACKGROUND_COLOR_BUTTON;\n  }\n\n  var _react_native_1$Style = react_native_1.StyleSheet.flatten(style),\n      backgroundColor = _react_native_1$Style.backgroundColor,\n      backgroundColorDisabled = _react_native_1$Style.backgroundColorDisabled;\n\n  if (disabled) {\n    return backgroundColorDisabled;\n  }\n\n  return backgroundColor;\n};\n\nvar getButtonTextColor = function getButtonTextColor(buttonProps) {\n  var titleStyle = buttonProps.titleStyle,\n      disabled = buttonProps.disabled;\n\n  if (!titleStyle) {\n    return DEFAULT_COLOR_BUTTON;\n  }\n\n  var _react_native_1$Style2 = react_native_1.StyleSheet.flatten(titleStyle),\n      color = _react_native_1$Style2.color,\n      colorDisabled = _react_native_1$Style2.colorDisabled;\n\n  if (disabled) {\n    return colorDisabled;\n  }\n\n  return color;\n};\n\nvar getButtonStyle = function getButtonStyle(buttonProps) {\n  var style = buttonProps.style;\n  var backgroundColor = getButtonBackgroundColor(buttonProps);\n  var flattenStyle = react_native_1.StyleSheet.flatten(style);\n  flattenStyle == null ? true : delete flattenStyle.backgroundColorDisabled;\n  return react_native_1.Platform.select({\n    ios: [{\n      height: 46,\n      justifyContent: 'center'\n    }, flattenStyle, {\n      backgroundColor: backgroundColor\n    }],\n    android: [flattenStyle, {\n      backgroundColor: backgroundColor\n    }]\n  });\n};\n\nvar getButtonTextStyle = function getButtonTextStyle(buttonProps, positive) {\n  var style = buttonProps.style;\n  var color = getButtonTextColor(buttonProps);\n  var flattenStyle = react_native_1.StyleSheet.flatten(style);\n  flattenStyle == null ? true : delete flattenStyle.backgroundColorDisabled;\n  return react_native_1.Platform.select({\n    ios: [{\n      textAlign: 'center',\n      textAlignVertical: 'center',\n      color: color,\n      fontWeight: positive ? 'bold' : 'normal'\n    }, {\n      color: color\n    }, flattenStyle],\n    android: [{\n      height: 36,\n      minWidth: 64,\n      padding: 8,\n      textAlign: 'center',\n      textAlignVertical: 'center',\n      color: color,\n      fontWeight: 'bold',\n      textTransform: 'uppercase'\n    }, {\n      color: color\n    }, flattenStyle]\n  });\n};\n\nvar ConfirmDialog = function ConfirmDialog(_ref) {\n  var children = _ref.children,\n      negativeButton = _ref.negativeButton,\n      positiveButton = _ref.positiveButton,\n      message = _ref.message,\n      messageStyle = _ref.messageStyle,\n      others = _objectWithoutProperties(_ref, _excluded);\n\n  var renderMessage = function renderMessage() {\n    if (!message) {\n      return null;\n    }\n\n    var textAlign = OS === 'ios' ? 'center' : undefined;\n    return react_1.default.createElement(react_native_1.Text, {\n      style: [{\n        textAlign: textAlign,\n        color: '#00000089',\n        fontSize: 18\n      }, messageStyle]\n    }, message);\n  };\n\n  var renderButton = function renderButton(buttonProps, positive) {\n    if (!buttonProps) {\n      return null;\n    }\n\n    var onPress = buttonProps.onPress,\n        disabled = buttonProps.disabled;\n    var containerStyle = getButtonStyle(buttonProps);\n    var textStyle = getButtonTextStyle(buttonProps, positive);\n    var touchableStyle = OS === 'ios' ? {\n      flex: 1\n    } : {};\n    return react_1.default.createElement(TouchableEffect_1.default, {\n      onPress: onPress,\n      disabled: disabled,\n      style: touchableStyle\n    }, react_1.default.createElement(react_native_1.View, {\n      style: containerStyle\n    }, react_1.default.createElement(react_native_1.Text, {\n      style: textStyle\n    }, buttonProps.title)));\n  };\n\n  var renderButtons = function renderButtons() {\n    var containerStyle = OS === 'ios' ? {\n      flexDirection: 'row'\n    } : {\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      height: 36\n    };\n    var dividerVertStyle = OS === 'ios' ? {\n      width: negativeButton ? 1 : 0,\n      backgroundColor: '#00000011'\n    } : {\n      width: 8\n    };\n    var dividerHoriStyle = OS === 'ios' ? {\n      height: 1,\n      backgroundColor: '#00000011'\n    } : {\n      height: 0\n    };\n    return react_1.default.createElement(react_native_1.View, null, react_1.default.createElement(react_native_1.View, {\n      style: dividerHoriStyle\n    }), react_1.default.createElement(react_native_1.View, {\n      style: containerStyle\n    }, renderButton(negativeButton, false), react_1.default.createElement(react_native_1.View, {\n      style: dividerVertStyle\n    }), renderButton(positiveButton, true)));\n  };\n\n  var renderContent = function renderContent() {\n    if (children) {\n      return children;\n    }\n\n    return renderMessage();\n  };\n\n  return react_1.default.createElement(Dialog_1.default, Object.assign({}, others, {\n    buttons: renderButtons()\n  }), renderContent());\n};\n\nConfirmDialog.defaultProps = Object.assign({}, Dialog_1.default.defaultProps);\nexports.default = ConfirmDialog;","map":{"version":3,"mappings":"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","names":["OS","react_native_1","DEFAULT_COLOR_BUTTON","DEFAULT_BACKGROUND_COLOR_BUTTON","getButtonBackgroundColor","buttonProps","style","disabled","flatten","backgroundColor","backgroundColorDisabled","getButtonTextColor","titleStyle","color","colorDisabled","getButtonStyle","flattenStyle","select","ios","height","justifyContent","android","getButtonTextStyle","positive","textAlign","textAlignVertical","fontWeight","minWidth","padding","textTransform","ConfirmDialog","children","negativeButton","positiveButton","message","messageStyle","others","renderMessage","undefined","react_1","fontSize","renderButton","onPress","containerStyle","textStyle","touchableStyle","flex","TouchableEffect_1","title","renderButtons","flexDirection","dividerVertStyle","width","dividerHoriStyle","renderContent","Dialog_1","buttons","defaultProps","exports"],"sources":["../src/ConfirmDialog.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}