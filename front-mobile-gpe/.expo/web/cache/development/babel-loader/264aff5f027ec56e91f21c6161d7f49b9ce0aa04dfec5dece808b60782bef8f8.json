{"ast":null,"code":"var _Asset = require(\"./Asset\");\n\nvar _PlatformUtils = require(\"./PlatformUtils\");\n\nvar _resolveAssetSource = require(\"./resolveAssetSource\");\n\nif (_PlatformUtils.IS_ENV_WITH_UPDATES_ENABLED) {\n  (0, _resolveAssetSource.setCustomSourceTransformer)(function (resolver) {\n    try {\n      if (resolver.asset.fileHashes) {\n        var asset = _Asset.Asset.fromMetadata(resolver.asset);\n\n        return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch (_unused) {\n      return resolver.defaultAsset();\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA;;AACA;;AACA;;AAGA,IAAIA,0CAAJ,EAAiC;EAC/B,oDAA2B,UAACC,QAAD,EAAa;IACtC,IAAI;MAEF,IAAIA,QAAQ,CAACC,KAAT,CAAeC,UAAnB,EAA+B;QAC7B,IAAMD,KAAK,GAAGE,aAAMC,YAAN,CAAmBJ,QAAQ,CAACC,KAA5B,CAAd;;QACA,OAAOD,QAAQ,CAACK,UAAT,CAAoBJ,KAAK,CAACK,UAAN,GAAmBL,KAAK,CAACM,QAAzB,GAAqCN,KAAK,CAACO,GAA/D,CAAP;MACD,CAHD,MAGO;QACL,OAAOR,QAAQ,CAACS,YAAT,EAAP;MACD;IACF,CARD,CAQE,gBAAM;MACN,OAAOT,QAAQ,CAACS,YAAT,EAAP;IACD;EACF,CAZD;AAaD","names":["IS_ENV_WITH_UPDATES_ENABLED","resolver","asset","fileHashes","Asset","fromMetadata","fromSource","downloaded","localUri","uri","defaultAsset"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-asset/src/Asset.fx.ts"],"sourcesContent":["import { Asset } from './Asset';\nimport { IS_ENV_WITH_UPDATES_ENABLED } from './PlatformUtils';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nif (IS_ENV_WITH_UPDATES_ENABLED) {\n  setCustomSourceTransformer((resolver) => {\n    try {\n      // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n      if (resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}