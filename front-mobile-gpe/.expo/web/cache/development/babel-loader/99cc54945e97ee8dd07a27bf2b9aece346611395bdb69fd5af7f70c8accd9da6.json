{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDocumentAsync = getDocumentAsync;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _ExpoDocumentPicker = _interopRequireDefault(require(\"./ExpoDocumentPicker\"));\n\nfunction getDocumentAsync() {\n  return _getDocumentAsync.apply(this, arguments);\n}\n\nfunction _getDocumentAsync() {\n  _getDocumentAsync = (0, _asyncToGenerator2.default)(function* () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$type = _ref.type,\n        type = _ref$type === void 0 ? '*/*' : _ref$type,\n        _ref$copyToCacheDirec = _ref.copyToCacheDirectory,\n        copyToCacheDirectory = _ref$copyToCacheDirec === void 0 ? true : _ref$copyToCacheDirec,\n        _ref$multiple = _ref.multiple,\n        multiple = _ref$multiple === void 0 ? false : _ref$multiple;\n\n    if (typeof type === 'string') {\n      type = [type];\n    }\n\n    return yield _ExpoDocumentPicker.default.getDocumentAsync({\n      type: type,\n      copyToCacheDirectory: copyToCacheDirectory,\n      multiple: multiple\n    });\n  });\n  return _getDocumentAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;;SAgBsBA,gB;;;;;sDAAf,aAIsB;IAAA,+EAAF,EAAE;IAAA,qBAH3BC,IAG2B;IAAA,IAH3BA,IAG2B,0BAHpB,KAGoB;IAAA,iCAF3BC,oBAE2B;IAAA,IAF3BA,oBAE2B,sCAFJ,IAEI;IAAA,yBAD3BC,QAC2B;IAAA,IAD3BA,QAC2B,8BADhB,KACgB;;IAC3B,IAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;MAC5BA,IAAI,GAAG,CAACA,IAAD,CAAP;IACD;;IACD,aAAaG,4BAAmBJ,gBAAnB,CAAoC;MAAEC,IAAI,EAAJA,IAAF;MAAQC,oBAAoB,EAApBA,oBAAR;MAA8BC,QAAQ,EAARA;IAA9B,CAApC,CAAb;EACD,C","names":["getDocumentAsync","type","copyToCacheDirectory","multiple","ExpoDocumentPicker"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-document-picker/src/index.ts"],"sourcesContent":["import ExpoDocumentPicker from './ExpoDocumentPicker';\nimport { DocumentPickerOptions, DocumentResult } from './types';\nexport { DocumentPickerOptions, DocumentResult };\n\n// @needsAudit\n/**\n * Display the system UI for choosing a document. By default, the chosen file is copied to [the app's internal cache directory](filesystem.md#filesystemcachedirectory).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * > Therefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\n * > intended. The `cancel` event will not be returned in the browser due to platform restrictions and\n * > inconsistencies across browsers.\n *\n * @return On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\n *\n * If the user cancelled the document picking, the promise resolves to `{ type: 'cancel' }`.\n */\nexport async function getDocumentAsync({\n  type = '*/*',\n  copyToCacheDirectory = true,\n  multiple = false,\n}: DocumentPickerOptions = {}): Promise<DocumentResult> {\n  if (typeof type === 'string') {\n    type = [type] as string[];\n  }\n  return await ExpoDocumentPicker.getDocumentAsync({ type, copyToCacheDirectory, multiple });\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}