{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeDialog = _interopRequireDefault(require(\"react-native-dialog\"));\n\nvar _reactNativeSimpleDialogs = require(\"react-native-simple-dialogs\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _FileItemCategorie = _interopRequireDefault(require(\"../components/components/Browser/Files/FileItemCategorie\"));\n\nvar _PickImages = _interopRequireDefault(require(\"../components/components/Browser/PickImages\"));\n\nvar _ActionSheet = _interopRequireDefault(require(\"../components/components/ActionSheet\"));\n\nvar _useSelectionChange2 = _interopRequireDefault(require(\"../components/hooks/useSelectionChange\"));\n\nvar _promiseProgress = _interopRequireDefault(require(\"../components/utils/promiseProgress\"));\n\nvar _NewCategorieDialog = require(\"../components/components/Browser/NewCategorieDialog\");\n\nvar _CategoryTransferDialog = require(\"../components/components/Browser/CategoryTransferDialog\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _expoConstants = _interopRequireDefault(require(\"expo-constants\"));\n\nvar FileSystem = _interopRequireWildcard(require(\"expo-file-system\"));\n\nvar ImagePicker = _interopRequireWildcard(require(\"expo-image-picker\"));\n\nvar DocumentPicker = _interopRequireWildcard(require(\"expo-document-picker\"));\n\nvar mime = _interopRequireWildcard(require(\"react-native-mime-types\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _reduxHooks = require(\"../components/hooks/reduxHooks\");\n\nvar _imagesSlice = require(\"../components/files/imagesSlice\");\n\nvar _snackbarSlice = require(\"../components/files/snackbarSlice\");\n\nvar _Constants = require(\"../components/utils/Constants\");\n\nvar _Chatbox = _interopRequireDefault(require(\"./Chatbox\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/kevin/Desktop/group-1010001/front-mobile-gpe/screens/Categorie.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Categorie = function Categorie(_ref) {\n  var _route$params, _route$params2;\n\n  var route = _ref.route;\n  var dispatch = (0, _reduxHooks.useAppDispatch)();\n  var navigation = (0, _native.useNavigation)();\n\n  var _useAppSelector = (0, _reduxHooks.useAppSelector)(function (state) {\n    return state.theme.theme;\n  }),\n      colors = _useAppSelector.colors;\n\n  var docDir = FileSystem.documentDirectory || '';\n\n  var _useState = (0, _react.useState)((route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.prevDir) !== undefined ? route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.prevDir : docDir),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentDir = _useState2[0],\n      setCurrentDir = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      moveDir = _useState4[0],\n      setMoveDir = _useState4[1];\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      files = _useState6[0],\n      setFiles = _useState6[1];\n\n  var _useState7 = (0, _react.useState)([]),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      selectedFiles = _useState8[0],\n      setSelectedFiles = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      categorieDialogVisible = _useState10[0],\n      setCategorieDialogVisible = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      downloadDialogVisible = _useState12[0],\n      setDownloadDialogVisible = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      renameDialogVisible = _useState14[0],\n      setRenameDialogVisible = _useState14[1];\n\n  var _useState15 = (0, _react.useState)(''),\n      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n      newFileName = _useState16[0],\n      setNewFileName = _useState16[1];\n\n  var _useState17 = (0, _react.useState)(),\n      _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n      renamingFile = _useState18[0],\n      setRenamingFile = _useState18[1];\n\n  var renameInputRef = (0, _react.useRef)(null);\n\n  var _useState19 = (0, _react.useState)(false),\n      _useState20 = (0, _slicedToArray2.default)(_useState19, 2),\n      multiImageVisible = _useState20[0],\n      setMultiImageVisible = _useState20[1];\n\n  var _useState21 = (0, _react.useState)(false),\n      _useState22 = (0, _slicedToArray2.default)(_useState21, 2),\n      importProgressVisible = _useState22[0],\n      setImportProgressVisible = _useState22[1];\n\n  var _useState23 = (0, _react.useState)(false),\n      _useState24 = (0, _slicedToArray2.default)(_useState23, 2),\n      destinationDialogVisible = _useState24[0],\n      setDestinationDialogVisible = _useState24[1];\n\n  var _useState25 = (0, _react.useState)(false),\n      _useState26 = (0, _slicedToArray2.default)(_useState25, 2),\n      newFileActionSheet = _useState26[0],\n      setNewFileActionSheet = _useState26[1];\n\n  var _useState27 = (0, _react.useState)(''),\n      _useState28 = (0, _slicedToArray2.default)(_useState27, 2),\n      moveOrCopy = _useState28[0],\n      setMoveOrCopy = _useState28[1];\n\n  var _useSelectionChange = (0, _useSelectionChange2.default)(files),\n      multiSelect = _useSelectionChange.multiSelect,\n      allSelected = _useSelectionChange.allSelected;\n\n  (0, _react.useEffect)(function () {\n    getCategories();\n  }, [currentDir]);\n\n  _react.default.useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      getCategories();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  (0, _react.useEffect)(function () {\n    var _route$params3;\n\n    if ((route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.categorieName) !== undefined) {\n      setCurrentDir(function (prev) {\n        return prev != null && prev.endsWith('/') ? prev + route.params.categorieName : prev + '/' + route.params.categorieName;\n      });\n    }\n  }, [route]);\n  (0, _react.useEffect)(function () {\n    var backAction = function backAction() {\n      if (navigation.canGoBack()) navigation.goBack();\n      return true;\n    };\n\n    var backHandler = _reactNative.BackHandler.addEventListener('hardwareBackPress', backAction);\n\n    return function () {\n      return backHandler.remove();\n    };\n  }, []);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return (0, _jsxRuntime.jsx)(_FileItemCategorie.default, {\n      item: item,\n      currentDir: currentDir,\n      toggleSelect: toggleSelect,\n      multiSelect: multiSelect,\n      setTransferDialog: setDestinationDialogVisible,\n      setMoveOrCopy: setMoveOrCopy,\n      deleteSelectedFiles: deleteSelectedFiles,\n      setRenamingFile: setRenamingFile,\n      setRenameDialogVisible: setRenameDialogVisible,\n      setNewFileName: setNewFileName\n    });\n  };\n\n  var handleDownload = function handleDownload(downloadUrl) {\n    _axios.default.get(downloadUrl).then(function (res) {\n      var fileExt = mime.extension(res.headers['content-type']);\n      FileSystem.downloadAsync(downloadUrl, currentDir + '/DL_' + (0, _moment.default)().format('DDMMYHmmss') + '.' + fileExt).then(function () {\n        getCategories();\n        setDownloadDialogVisible(false);\n        handleSetSnack({\n          message: 'Download complete'\n        });\n      }).catch(function (_) {\n        handleSetSnack({\n          message: 'Please provide a correct url'\n        });\n      });\n    }).catch(function (error) {\n      return handleSetSnack({\n        message: error.message\n      });\n    });\n  };\n\n  var toggleSelect = function toggleSelect(item) {\n    if (item.selected && selectedFiles.includes(item)) {\n      var index = selectedFiles.indexOf(item);\n\n      if (index > -1) {\n        selectedFiles.splice(index, 1);\n      }\n    } else if (!item.selected && !selectedFiles.includes(item)) {\n      setSelectedFiles(function (prev) {\n        return [].concat((0, _toConsumableArray2.default)(prev), [item]);\n      });\n    }\n\n    setFiles(files.map(function (i) {\n      if (item === i) {\n        i.selected = !i.selected;\n      }\n\n      return i;\n    }));\n  };\n\n  var toggleSelectAll = function toggleSelectAll() {\n    if (!allSelected) {\n      setFiles(files.map(function (item) {\n        item.selected = true;\n        return item;\n      }));\n      setSelectedFiles(files);\n    } else {\n      setFiles(files.map(function (item) {\n        item.selected = false;\n        return item;\n      }));\n      setSelectedFiles([]);\n    }\n  };\n\n  var getCategories = function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n      FileSystem.readDirectoryAsync(currentDir + '/categorie/').then(function (dirFiles) {\n        var _route$params4;\n\n        if (currentDir !== (route == null ? void 0 : (_route$params4 = route.params) == null ? void 0 : _route$params4.prevDir)) {\n          var filteredFiles = dirFiles.filter(function (file) {\n            return file !== 'RCTAsyncLocalStorage';\n          });\n          var filesProms = filteredFiles.map(function (fileName) {\n            return FileSystem.getInfoAsync(currentDir + '/categorie/' + fileName);\n          });\n          Promise.all(filesProms).then(function (results) {\n            var tempfiles = results.map(function (file) {\n              var name = file.uri.endsWith('/') ? file.uri.slice(0, file.uri.length - 1).split('/').pop() : file.uri.split('/').pop();\n              return Object(Object.assign({}, file, {\n                name: name,\n                selected: false\n              }));\n            });\n            setFiles(tempfiles);\n            var tempImageFiles = results.filter(function (file) {\n              var fileExtension = file.uri.split('/').pop().split('.').pop().toLowerCase();\n\n              if (_Constants.imageFormats.includes(fileExtension)) {\n                return file;\n              }\n            });\n            dispatch((0, _imagesSlice.setImages)(tempImageFiles));\n          });\n        }\n      }).catch(function (_) {});\n    });\n\n    return function getCategories() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  function createCategorie(_x) {\n    return _createCategorie.apply(this, arguments);\n  }\n\n  function _createCategorie() {\n    _createCategorie = (0, _asyncToGenerator2.default)(function* (name) {\n      FileSystem.makeDirectoryAsync(currentDir + '/categorie/' + name).then(function () {\n        getCategories();\n        setCategorieDialogVisible(false);\n      }).catch(function () {\n        handleSetSnack({\n          message: 'Categorie could not be created or already exists.'\n        });\n      });\n    });\n    return _createCategorie.apply(this, arguments);\n  }\n\n  var pickImage = function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n            status = _yield$ImagePicker$re.status;\n\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n          return;\n        }\n\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          aspect: [4, 3],\n          quality: 1\n        });\n\n        if (!result.canceled) {\n          var _ref5 = result,\n              uri = _ref5.uri,\n              type = _ref5.type;\n          var filename = uri.replace(/^.*[\\\\\\/]/, '');\n\n          var ext = _Constants.reExt.exec(filename)[1];\n\n          var fileNamePrefix = type === 'image' ? 'IMG_' : 'VID_';\n          yield FileSystem.moveAsync({\n            from: uri,\n            to: currentDir + '/categorie/' + fileNamePrefix + (0, _moment.default)().format('DDMMYHmmss') + '.' + ext\n          });\n          getCategories();\n        }\n      } catch (error) {\n        console.error('Error picking image:', error);\n      }\n    });\n\n    return function pickImage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  function handleCopy(_x2, _x3, _x4, _x5) {\n    return _handleCopy.apply(this, arguments);\n  }\n\n  function _handleCopy() {\n    _handleCopy = (0, _asyncToGenerator2.default)(function* (from, to, successMessage, errorMessage) {\n      FileSystem.copyAsync({\n        from: from,\n        to: to\n      }).then(function () {\n        getCategories();\n        handleSetSnack({\n          message: successMessage\n        });\n      }).catch(function () {\n        return handleSetSnack({\n          message: errorMessage\n        });\n      });\n    });\n    return _handleCopy.apply(this, arguments);\n  }\n\n  var pickDocument = function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* () {\n      var result = yield DocumentPicker.getDocumentAsync({\n        copyToCacheDirectory: false\n      });\n\n      if (result.type === 'success') {\n        var _yield$FileSystem$get = yield FileSystem.getInfoAsync(currentDir + '/' + result.name),\n            fileExists = _yield$FileSystem$get.exists;\n\n        if (fileExists) {\n          _reactNative.Alert.alert('Conflicting File', \"The destination categorie has a file with the same name \" + result.name, [{\n            text: 'Cancel',\n            style: 'cancel'\n          }, {\n            text: 'Replace the file',\n            onPress: function onPress() {\n              handleCopy(result.uri, currentDir + '/' + result.name, result.name + \" successfully copied.\", 'An unexpected error importing the file.');\n            },\n            style: 'default'\n          }]);\n        } else {\n          handleCopy(result.uri, currentDir + '/' + result.name, result.name + \" successfully copied.\", 'An unexpected error importing the file.');\n        }\n      }\n    });\n\n    return function pickDocument() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var onMultiSelectSubmit = function () {\n    var _ref7 = (0, _asyncToGenerator2.default)(function* (data) {\n      var transferPromises = data.map(function (file) {\n        return FileSystem.copyAsync({\n          from: file.uri,\n          to: currentDir + '/categorie/' + file.filename\n        });\n      });\n      Promise.all(transferPromises).then(function () {\n        setMultiImageVisible(false);\n        getCategories();\n      });\n    });\n\n    return function onMultiSelectSubmit(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var moveSelectedFiles = function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (destination) {\n      var selectedFiles = files.filter(function (file) {\n        return file.selected;\n      });\n      var destinationCategorieFiles = yield FileSystem.readDirectoryAsync(destination);\n\n      function executeTransfer() {\n        var transferPromises = selectedFiles.map(function (file) {\n          if (moveOrCopy === 'Copy') return FileSystem.copyAsync({\n            from: currentDir + '/categorie/' + file.name,\n            to: destination + '/categorie/' + file.name\n          });else return FileSystem.moveAsync({\n            from: currentDir + '/categorie/' + file.name,\n            to: destination + '/categorie/' + file.name\n          });\n        });\n        (0, _promiseProgress.default)(transferPromises, function (p) {}).then(function (_) {\n          setDestinationDialogVisible(false);\n          setMoveDir('');\n          setMoveOrCopy('');\n          getCategories();\n        });\n      }\n\n      var conflictingFiles = selectedFiles.filter(function (file) {\n        return destinationCategorieFiles.includes(file.name);\n      });\n      var confLen = conflictingFiles.length;\n\n      if (confLen > 0) {\n        _reactNative.Alert.alert('Conflicting Files', \"The destination Categorie has \" + confLen + \" \" + (confLen === 1 ? 'file' : 'files') + \" with the same \" + (confLen === 1 ? 'name' : 'names') + \".\", [{\n          text: 'Cancel',\n          style: 'cancel'\n        }, {\n          text: 'Replace the files',\n          onPress: function onPress() {\n            executeTransfer();\n          },\n          style: 'default'\n        }]);\n      } else {\n        executeTransfer();\n      }\n    });\n\n    return function moveSelectedFiles(_x7) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var deleteSelectedFiles = function () {\n    var _ref9 = (0, _asyncToGenerator2.default)(function* (file) {\n      var filestoBeDeleted = file ? [file] : selectedFiles;\n      var deleteProms = filestoBeDeleted.map(function (file) {\n        return FileSystem.deleteAsync(file.uri);\n      });\n      Promise.all(deleteProms).then(function (_) {\n        handleSetSnack({\n          message: 'Files deleted!'\n        });\n        getCategories();\n        setSelectedFiles([]);\n      }).catch(function (err) {\n        console.log(err);\n        getCategories();\n      });\n    });\n\n    return function deleteSelectedFiles(_x8) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var _useState29 = (0, _react.useState)(false),\n      _useState30 = (0, _slicedToArray2.default)(_useState29, 2),\n      initialSelectionDone = _useState30[0],\n      setInitialSelectionDone = _useState30[1];\n\n  (0, _react.useEffect)(function () {\n    if (renameDialogVisible && _reactNative.Platform.OS === 'android') {\n      setTimeout(function () {\n        var _renameInputRef$curre;\n\n        (_renameInputRef$curre = renameInputRef.current) == null ? void 0 : _renameInputRef$curre.focus();\n      }, 100);\n    }\n\n    if (!renameDialogVisible) setTimeout(function () {\n      setInitialSelectionDone(false);\n    }, 500);\n  }, [renameDialogVisible]);\n\n  var onRename = function () {\n    var _ref10 = (0, _asyncToGenerator2.default)(function* () {\n      var filePathSplit = renamingFile.uri.split('/categorie/');\n      var fileCategoriePath = filePathSplit.slice(0, filePathSplit.length - 1).join('/categorie/');\n      FileSystem.getInfoAsync(fileCategoriePath + '/categorie/' + newFileName).then(function (res) {\n        if (res.exists) handleSetSnack({\n          message: 'A categorie or file with the same name already exists.'\n        });else FileSystem.moveAsync({\n          from: renamingFile.uri,\n          to: fileCategoriePath + '/' + newFileName\n        }).then(function () {\n          setRenameDialogVisible(false);\n          getCategories();\n        }).catch(function (_) {\n          return handleSetSnack({\n            message: 'Error renaming the file/categorie/'\n          });\n        });\n      });\n    });\n\n    return function onRename() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  var handleSetSnack = function handleSetSnack(data) {\n    dispatch((0, _snackbarSlice.setSnack)(data));\n  };\n\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: Object.assign({}, styles.container, {\n      backgroundColor: colors.background\n    }),\n    children: [(0, _jsxRuntime.jsx)(_ActionSheet.default, {\n      title: 'Add a new file',\n      numberOfLinesTitle: undefined,\n      visible: newFileActionSheet,\n      actionItems: ['Camera Roll', 'Multi Image Picker', 'Import File from Storage', 'Download', 'Cancel'],\n      itemIcons: ['camera', 'image', 'drive-file-move-outline', 'file-download', 'close'],\n      onClose: setNewFileActionSheet,\n      onItemPressed: function onItemPressed(buttonIndex) {\n        if (buttonIndex === 0) {\n          pickImage();\n        } else if (buttonIndex === 1) {\n          setMultiImageVisible(true);\n        } else if (buttonIndex === 2) {\n          pickDocument();\n        } else if (buttonIndex === 3) {\n          setDownloadDialogVisible(true);\n        }\n      },\n      cancelButtonIndex: 4,\n      modalStyle: {\n        backgroundColor: colors.background2\n      },\n      itemTextStyle: {\n        color: colors.text\n      },\n      titleStyle: {\n        color: colors.secondary\n      }\n    }), (0, _jsxRuntime.jsx)(_CategoryTransferDialog.CategoryTransferDialog, {\n      isVisible: destinationDialogVisible,\n      setIsVisible: setDestinationDialogVisible,\n      currentDir: docDir,\n      moveDir: moveDir,\n      setMoveDir: setMoveDir,\n      moveSelectedFiles: moveSelectedFiles,\n      moveOrCopy: moveOrCopy,\n      setMoveOrCopy: setMoveOrCopy\n    }), (0, _jsxRuntime.jsx)(_NewCategorieDialog.NewCategorieDialog, {\n      visible: categorieDialogVisible,\n      createCategorie: createCategorie,\n      setCategorieDialogVisible: setCategorieDialogVisible\n    }), (0, _jsxRuntime.jsxs)(_reactNativeDialog.default.Container, {\n      visible: renameDialogVisible,\n      children: [(0, _jsxRuntime.jsx)(_reactNativeDialog.default.Title, {\n        style: {\n          color: 'black'\n        },\n        children: \"Rename file\"\n      }), (0, _jsxRuntime.jsx)(_reactNativeDialog.default.Input, {\n        textInputRef: renameInputRef,\n        value: decodeURI(newFileName),\n        onChangeText: function onChangeText(text) {\n          setNewFileName(text);\n        },\n        onKeyPress: function onKeyPress() {\n          setInitialSelectionDone(true);\n        },\n        selection: !initialSelectionDone ? {\n          start: 0,\n          end: decodeURI(newFileName).split('.')[0].length\n        } : undefined,\n        style: {\n          color: 'black'\n        }\n      }), (0, _jsxRuntime.jsx)(_reactNativeDialog.default.Button, {\n        label: \"Cancel\",\n        onPress: function onPress() {\n          setRenameDialogVisible(false);\n        }\n      }), (0, _jsxRuntime.jsx)(_reactNativeDialog.default.Button, {\n        label: \"Rename\",\n        onPress: function onPress() {\n          return onRename();\n        }\n      })]\n    }), (0, _jsxRuntime.jsx)(_reactNativeSimpleDialogs.Dialog, {\n      dialogStyle: {\n        backgroundColor: colors.background2\n      },\n      animationType: \"slide\",\n      contentStyle: styles.contentStyle,\n      overlayStyle: styles.overlayStyle,\n      visible: multiImageVisible,\n      onTouchOutside: function onTouchOutside() {\n        return setMultiImageVisible(false);\n      },\n      children: (0, _jsxRuntime.jsx)(_PickImages.default, {\n        onMultiSelectSubmit: onMultiSelectSubmit,\n        onClose: function onClose() {\n          return setMultiImageVisible(false);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNativeSimpleDialogs.ProgressDialog, {\n      visible: importProgressVisible,\n      title: \"Importing Assets\",\n      message: \"Please, wait...\"\n    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: styles.topButtons,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: styles.topLeft,\n        children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            return setCategorieDialogVisible(true);\n          },\n          children: (0, _jsxRuntime.jsx)(_vectorIcons.Feather, {\n            name: \"inbox\",\n            size: 30,\n            color: colors.primary\n          })\n        })\n      }), multiSelect && (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: styles.topRight,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            setDestinationDialogVisible(true);\n            setMoveOrCopy('Move');\n          },\n          children: (0, _jsxRuntime.jsx)(_vectorIcons.MaterialCommunityIcons, {\n            name: \"file-move-outline\",\n            size: 30,\n            color: colors.primary\n          })\n        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: toggleSelectAll,\n          children: (0, _jsxRuntime.jsx)(_vectorIcons.Feather, {\n            style: {\n              marginLeft: 10\n            },\n            name: allSelected ? 'check-square' : 'square',\n            size: 24,\n            color: colors.primary\n          })\n        })]\n      })]\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: Object.assign({}, styles.fileList, {\n        borderTopColor: colors.primary\n      }),\n      children: (0, _jsxRuntime.jsx)(_reactNative.FlatList, {\n        data: files,\n        showsVerticalScrollIndicator: false,\n        renderItem: renderItem,\n        keyExtractor: _keyExtractor\n      })\n    }), multiSelect && (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: Object.assign({}, styles.bottomMenu, {\n        backgroundColor: colors.background\n      }),\n      children: (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        children: (0, _jsxRuntime.jsx)(_vectorIcons.MaterialCommunityIcons, {\n          name: \"export-variant\",\n          size: 28,\n          color: colors.primary\n        })\n      })\n    }), (0, _jsxRuntime.jsx)(_Chatbox.default, {})]\n  });\n};\n\nvar _keyExtractor = function _keyExtractor(item) {\n  return item.name;\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    width: _Constants.SIZE,\n    paddingTop: _expoConstants.default.statusBarHeight\n  },\n  topButtons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 15,\n    marginHorizontal: 10\n  },\n  topLeft: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '25%'\n  },\n  topRight: {\n    width: '75%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  fileList: {\n    flex: 1,\n    borderTopWidth: 0.5,\n    marginTop: 15,\n    marginHorizontal: 5\n  },\n  bottomMenu: {\n    height: 45,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  },\n  contentStyle: {\n    width: _Constants.SIZE,\n    height: _Constants.HEIGHT * 0.8,\n    padding: 0,\n    margin: 0\n  },\n  overlayStyle: {\n    width: _Constants.SIZE,\n    padding: 0,\n    margin: 0\n  }\n});\n\nvar _default = Categorie;\nexports.default = _default;","map":{"version":3,"names":["Categorie","route","dispatch","useAppDispatch","navigation","useNavigation","useAppSelector","state","theme","colors","docDir","FileSystem","documentDirectory","useState","params","prevDir","undefined","currentDir","setCurrentDir","moveDir","setMoveDir","files","setFiles","selectedFiles","setSelectedFiles","categorieDialogVisible","setCategorieDialogVisible","downloadDialogVisible","setDownloadDialogVisible","renameDialogVisible","setRenameDialogVisible","newFileName","setNewFileName","renamingFile","setRenamingFile","renameInputRef","useRef","multiImageVisible","setMultiImageVisible","importProgressVisible","setImportProgressVisible","destinationDialogVisible","setDestinationDialogVisible","newFileActionSheet","setNewFileActionSheet","moveOrCopy","setMoveOrCopy","useSelectionChange","multiSelect","allSelected","useEffect","getCategories","React","unsubscribe","addListener","categorieName","prev","endsWith","backAction","canGoBack","goBack","backHandler","BackHandler","addEventListener","remove","renderItem","item","toggleSelect","deleteSelectedFiles","handleDownload","downloadUrl","axios","get","then","res","fileExt","mime","extension","headers","downloadAsync","moment","format","handleSetSnack","message","catch","_","error","selected","includes","index","indexOf","splice","map","i","toggleSelectAll","readDirectoryAsync","dirFiles","filteredFiles","filter","file","filesProms","fileName","getInfoAsync","Promise","all","results","tempfiles","name","uri","slice","length","split","pop","Object","tempImageFiles","fileExtension","toLowerCase","imageFormats","setImages","createCategorie","makeDirectoryAsync","pickImage","ImagePicker","requestMediaLibraryPermissionsAsync","status","console","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","canceled","type","filename","replace","ext","reExt","exec","fileNamePrefix","moveAsync","from","to","handleCopy","successMessage","errorMessage","copyAsync","pickDocument","DocumentPicker","getDocumentAsync","copyToCacheDirectory","fileExists","exists","Alert","alert","text","style","onPress","onMultiSelectSubmit","data","transferPromises","moveSelectedFiles","destination","destinationCategorieFiles","executeTransfer","allProgress","p","conflictingFiles","confLen","filestoBeDeleted","deleteProms","deleteAsync","err","log","initialSelectionDone","setInitialSelectionDone","Platform","OS","setTimeout","current","focus","onRename","filePathSplit","fileCategoriePath","join","setSnack","styles","container","backgroundColor","background","buttonIndex","background2","color","secondary","decodeURI","start","end","contentStyle","overlayStyle","topButtons","topLeft","primary","topRight","marginLeft","fileList","borderTopColor","_keyExtractor","bottomMenu","StyleSheet","create","flex","width","SIZE","paddingTop","Constants","statusBarHeight","display","flexDirection","justifyContent","alignItems","marginTop","marginHorizontal","borderTopWidth","height","HEIGHT","padding","margin"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/screens/Categorie.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  Platform,\n  Alert,\n  BackHandler,\n  TextInput,\n} from 'react-native';\n\nimport Dialog from 'react-native-dialog';\n\nimport {\n  Dialog as GalleryDialog,\n  ProgressDialog,\n} from 'react-native-simple-dialogs';\nimport { AntDesign, Feather } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport FileitemCategorie from '../components/components/Browser/Files/FileItemCategorie';\nimport Pickimages from '../components/components/Browser/PickImages';\nimport ActionSheet from '../components/components/ActionSheet';\n\nimport useSelectionChange from '../components/hooks/useSelectionChange';\nimport allProgress from '../components/utils/promiseProgress';\n\nimport { NewCategorieDialog } from '../components/components/Browser/NewCategorieDialog';\nimport { DownloadDialog } from '../components/components/Browser/DownloadDialog';\nimport { CategoryTransferDialog } from '../components/components/Browser/CategoryTransferDialog';\n\nimport axios, { AxiosError } from 'axios';\nimport moment from 'moment';\nimport Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from 'expo-document-picker';\nimport * as MediaLibrary from 'expo-media-library';\nimport * as mime from 'react-native-mime-types';\n\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { ImageInfo } from 'expo-image-picker/build/ImagePicker.types';\nimport { ExtendedAsset, fileItemCategorie } from '../components/utils/types';\nimport { useAppDispatch, useAppSelector } from '../components/hooks/reduxHooks';\nimport { setImages } from '../components/files/imagesSlice';\nimport { setSnack, snackActionPayload } from '../components/files/snackbarSlice';\nimport { HEIGHT, imageFormats, reExt, SIZE } from '../components/utils/Constants';\nimport ChatBox from './Chatbox';\nimport ChatPage from './ChatPage';\n\ntype CategorieParamList = {\n  Categorie: { prevDir: string; categorieName: string };\n};\n\ntype ICategorieProps = StackScreenProps<CategorieParamList, 'Categorie'>;\n\nconst Categorie = ({ route }: ICategorieProps) => {\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { colors } = useAppSelector((state) => state.theme.theme);\n  const docDir: string = FileSystem.documentDirectory || '';\n  const [currentDir, setCurrentDir] = useState<string>(\n    route?.params?.prevDir !== undefined ? route?.params?.prevDir : docDir\n  );\n  const [moveDir, setMoveDir] = useState('');\n  const [files, setFiles] = useState<fileItemCategorie[]>([]);\n  const [selectedFiles, setSelectedFiles] = useState<fileItemCategorie[]>([]);\n  const [categorieDialogVisible, setCategorieDialogVisible] = useState(false);\n  const [downloadDialogVisible, setDownloadDialogVisible] = useState(false);\n  const [renameDialogVisible, setRenameDialogVisible] = useState(false);\n  const [newFileName, setNewFileName] = useState('');\n  const [renamingFile, setRenamingFile] = useState<fileItemCategorie>();\n  const renameInputRef = useRef<TextInput>(null);\n  const [multiImageVisible, setMultiImageVisible] = useState(false);\n  const [importProgressVisible, setImportProgressVisible] = useState(false);\n  const [destinationDialogVisible, setDestinationDialogVisible] =\n    useState(false);\n  const [newFileActionSheet, setNewFileActionSheet] = useState(false);\n  const [moveOrCopy, setMoveOrCopy] = useState('');\n  const { multiSelect, allSelected } = useSelectionChange(files);\n\n  useEffect(() => {\n    getCategories();\n  }, [currentDir]);\n\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      getCategories();\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  useEffect(() => {\n    if (route?.params?.categorieName !== undefined) {\n      setCurrentDir((prev) =>\n        prev?.endsWith('/')\n          ? prev + route.params.categorieName\n          : prev + '/' + route.params.categorieName\n      );\n    }\n  }, [route]);\n\n  useEffect(() => {\n    const backAction = () => {\n      if (navigation.canGoBack()) navigation.goBack();\n      return true;\n    };\n\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      backAction\n    );\n\n    return () => backHandler.remove();\n  }, []);\n\n  const renderItem = ({ item }: { item: fileItemCategorie }) => (\n    <FileitemCategorie\n      item={item}\n      currentDir={currentDir}\n      toggleSelect={toggleSelect}\n      multiSelect={multiSelect}\n      setTransferDialog={setDestinationDialogVisible}\n      setMoveOrCopy={setMoveOrCopy}\n      deleteSelectedFiles={deleteSelectedFiles}\n      setRenamingFile={setRenamingFile}\n      setRenameDialogVisible={setRenameDialogVisible}\n      setNewFileName={setNewFileName}\n    ></FileitemCategorie>\n  );\n\n  const handleDownload = (downloadUrl: string) => {\n    axios\n      .get(downloadUrl)\n      .then((res) => {\n        const fileExt = mime.extension(res.headers['content-type']);\n        FileSystem.downloadAsync(\n          downloadUrl,\n          currentDir + '/DL_' + moment().format('DDMMYHmmss') + '.' + fileExt\n        )\n          .then(() => {\n            getCategories();\n            setDownloadDialogVisible(false);\n            handleSetSnack({\n              message: 'Download complete',\n            });\n          })\n          .catch((_) => {\n            handleSetSnack({\n              message: 'Please provide a correct url',\n            });\n          });\n      })\n      .catch((error: AxiosError) =>\n        handleSetSnack({\n          message: error.message,\n        })\n      );\n  };\n\n  const toggleSelect = (item: fileItemCategorie) => {\n    if (item.selected && selectedFiles.includes(item)) {\n      const index = selectedFiles.indexOf(item);\n      if (index > -1) {\n        selectedFiles.splice(index, 1);\n      }\n    } else if (!item.selected && !selectedFiles.includes(item)) {\n      setSelectedFiles((prev) => [...prev, item]);\n    }\n    setFiles(\n      files.map((i) => {\n        if (item === i) {\n          i.selected = !i.selected;\n        }\n        return i;\n      })\n    );\n  };\n\n  const toggleSelectAll = () => {\n    if (!allSelected) {\n      setFiles(\n        files.map((item) => {\n          item.selected = true;\n          return item;\n        })\n      );\n      setSelectedFiles(files);\n    } else {\n      setFiles(\n        files.map((item) => {\n          item.selected = false;\n          return item;\n        })\n      );\n      setSelectedFiles([]);\n    }\n  };\n\n  const getCategories = async () => {\n    FileSystem.readDirectoryAsync(currentDir + '/categorie/')\n      .then((dirFiles) => {\n        if (currentDir !== route?.params?.prevDir) {\n          const filteredFiles = dirFiles.filter(\n            (file) => file !== 'RCTAsyncLocalStorage'\n          );\n          const filesProms = filteredFiles.map((fileName) =>\n            FileSystem.getInfoAsync(currentDir + '/categorie/' + fileName)\n          );\n          Promise.all(filesProms).then((results) => {\n            let tempfiles: fileItemCategorie[] = results.map((file) => {\n              const name = file.uri.endsWith('/')\n                ? file.uri\n                    .slice(0, file.uri.length - 1)\n                    .split('/')\n                    .pop()\n                : file.uri.split('/').pop();\n              return Object({\n                ...file,\n                name,\n                selected: false,\n              });\n            });\n            setFiles(tempfiles);\n            const tempImageFiles = results.filter((file) => {\n              let fileExtension = file.uri\n                .split('/')\n                .pop()\n                .split('.')\n                .pop()\n                .toLowerCase();\n              if (imageFormats.includes(fileExtension)) {\n                return file;\n              }\n            });\n            dispatch(setImages(tempImageFiles));\n          });\n        }\n      })\n      .catch((_) => {});\n  };\n\n  async function createCategorie(name: string) {\n\n    FileSystem.makeDirectoryAsync(currentDir + '/categorie/' + name)\n      .then(() => {\n        getCategories();\n        setCategorieDialogVisible(false);\n      })\n      .catch(() => {\n        handleSetSnack({\n          message: 'Categorie could not be created or already exists.',\n        });\n      });\n  }\n\n  const pickImage = async () => {\n    try {\n      // Request permissions\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n        return;\n      }\n  \n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        aspect: [4, 3],\n        quality: 1,\n      });\n  \n      if (!result.canceled) {\n        const { uri, type } = result as ImageInfo;\n        const filename: string = uri.replace(/^.*[\\\\\\/]/, '');\n        const ext: string | null = reExt.exec(filename)![1];\n        const fileNamePrefix = type === 'image' ? 'IMG_' : 'VID_';\n  \n        await FileSystem.moveAsync({\n          from: uri,\n          to: currentDir + '/categorie/' + fileNamePrefix + moment().format('DDMMYHmmss') + '.' + ext,\n        });\n  \n        getCategories();\n      }\n    } catch (error) {\n      console.error('Error picking image:', error);\n    }\n  };\n  \n  async function handleCopy(\n    from: string,\n    to: string,\n    successMessage: string,\n    errorMessage: string\n  ): Promise<void> {\n    FileSystem.copyAsync({ from, to })\n      .then(() => {\n        getCategories();\n        handleSetSnack({\n          message: successMessage,\n        });\n      })\n      .catch(() =>\n        handleSetSnack({\n          message: errorMessage,\n        })\n      );\n  }\n\n  const pickDocument = async () => {\n    const result = await DocumentPicker.getDocumentAsync({\n      copyToCacheDirectory: false,\n    });\n\n    if (result.type === 'success') {\n      const { exists: fileExists } = await FileSystem.getInfoAsync(\n        currentDir + '/' + result.name\n      );\n      if (fileExists) {\n        Alert.alert(\n          'Conflicting File',\n          `The destination categorie has a file with the same name ${result.name}`,\n          [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n            },\n            {\n              text: 'Replace the file',\n              onPress: () => {\n                handleCopy(\n                  result.uri,\n                  currentDir + '/' + result.name,\n                  `${result.name} successfully copied.`,\n                  'An unexpected error importing the file.'\n                );\n              },\n              style: 'default',\n            },\n          ]\n        );\n      } else {\n        handleCopy(\n          result.uri,\n          currentDir + '/' + result.name,\n          `${result.name} successfully copied.`,\n          'An unexpected error importing the file.'\n        );\n      }\n    }\n  };\n\n  const onMultiSelectSubmit = async (data: ExtendedAsset[]) => {\n    const transferPromises = data.map((file) =>\n      FileSystem.copyAsync({\n        from: file.uri,\n        to: currentDir + '/categorie/' + file.filename,\n      })\n    );\n    Promise.all(transferPromises).then(() => {\n      setMultiImageVisible(false);\n      getCategories();\n    });\n  };\n\n  const moveSelectedFiles = async (destination: string) => {\n    const selectedFiles = files.filter((file) => file.selected);\n    const destinationCategorieFiles = await FileSystem.readDirectoryAsync(\n      destination\n    );\n    function executeTransfer() {\n      const transferPromises = selectedFiles.map((file) => {\n        if (moveOrCopy === 'Copy')\n          return FileSystem.copyAsync({\n            from: currentDir + '/categorie/' + file.name,\n            to: destination + '/categorie/' + file.name,\n          });\n        else\n          return FileSystem.moveAsync({\n            from: currentDir + '/categorie/' + file.name,\n            to: destination + '/categorie/' + file.name,\n          });\n      });\n      allProgress(transferPromises, (p) => {}).then((_) => {\n        setDestinationDialogVisible(false);\n        setMoveDir('');\n        setMoveOrCopy('');\n        getCategories();\n      });\n    }\n    const conflictingFiles = selectedFiles.filter((file) =>\n      destinationCategorieFiles.includes(file.name)\n    );\n    const confLen = conflictingFiles.length;\n    if (confLen > 0) {\n      Alert.alert(\n        'Conflicting Files',\n        `The destination Categorie has ${confLen} ${\n          confLen === 1 ? 'file' : 'files'\n        } with the same ${confLen === 1 ? 'name' : 'names'}.`,\n        [\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n          {\n            text: 'Replace the files',\n            onPress: () => {\n              executeTransfer();\n            },\n            style: 'default',\n          },\n        ]\n      );\n    } else {\n      executeTransfer();\n    }\n  };\n\n  const deleteSelectedFiles = async (file?: fileItemCategorie) => {\n    const filestoBeDeleted = file ? [file] : selectedFiles;\n    const deleteProms = filestoBeDeleted.map((file) =>\n      FileSystem.deleteAsync(file.uri)\n    );\n    Promise.all(deleteProms)\n      .then((_) => {\n        handleSetSnack({\n          message: 'Files deleted!',\n        });\n        getCategories();\n        setSelectedFiles([]);\n      })\n      .catch((err) => {\n        console.log(err);\n        getCategories();\n      });\n  };\n\n  const [initialSelectionDone, setInitialSelectionDone] = useState(false);\n\n  useEffect(() => {\n    if (renameDialogVisible && Platform.OS === 'android') {\n      setTimeout(() => {\n        renameInputRef.current?.focus();\n      }, 100);\n    }\n    if (!renameDialogVisible)\n      setTimeout(() => {\n        setInitialSelectionDone(false);\n      }, 500);\n  }, [renameDialogVisible]);\n\n  const onRename = async () => {\n    const filePathSplit = renamingFile.uri.split('/categorie/');\n    const fileCategoriePath = filePathSplit\n      .slice(0, filePathSplit.length - 1)\n      .join('/categorie/');\n    FileSystem.getInfoAsync(fileCategoriePath + '/categorie/' + newFileName).then((res) => {\n      if (res.exists)\n        handleSetSnack({\n          message: 'A categorie or file with the same name already exists.',\n        });\n      else\n        FileSystem.moveAsync({\n          from: renamingFile.uri,\n          to: fileCategoriePath + '/' + newFileName,\n        })\n          .then(() => {\n            setRenameDialogVisible(false);\n            getCategories();\n          })\n          .catch((_) =>\n            handleSetSnack({\n              message: 'Error renaming the file/categorie/',\n            })\n          );\n    });\n  };\n\n  const handleSetSnack = (data: snackActionPayload) => {\n    dispatch(setSnack(data));\n  };\n\n  return (\n    <View style={{ ...styles.container, backgroundColor: colors.background }}>\n      <ActionSheet\n        title={'Add a new file'}\n        numberOfLinesTitle={undefined}\n        visible={newFileActionSheet}\n        actionItems={[\n          'Camera Roll',\n          'Multi Image Picker',\n          'Import File from Storage',\n          'Download',\n          'Cancel',\n        ]}\n        itemIcons={[\n          'camera',\n          'image',\n          'drive-file-move-outline',\n          'file-download',\n          'close',\n        ]}\n        onClose={setNewFileActionSheet}\n        onItemPressed={(buttonIndex) => {\n          if (buttonIndex === 0) {\n            pickImage();\n          } else if (buttonIndex === 1) {\n            setMultiImageVisible(true);\n          } else if (buttonIndex === 2) {\n            pickDocument();\n          } else if (buttonIndex === 3) {\n            setDownloadDialogVisible(true);\n          }\n        }}\n        cancelButtonIndex={4}\n        modalStyle={{ backgroundColor: colors.background2 }}\n        itemTextStyle={{ color: colors.text }}\n        titleStyle={{ color: colors.secondary }}\n      />\n      <CategoryTransferDialog\n        isVisible={destinationDialogVisible}\n        setIsVisible={setDestinationDialogVisible}\n        currentDir={docDir}\n        moveDir={moveDir}\n        setMoveDir={setMoveDir}\n        moveSelectedFiles={moveSelectedFiles}\n        moveOrCopy={moveOrCopy}\n        setMoveOrCopy={setMoveOrCopy}\n      />\n      <NewCategorieDialog\n        visible={categorieDialogVisible}\n        createCategorie={createCategorie}\n        setCategorieDialogVisible={setCategorieDialogVisible}\n      />\n\n      <Dialog.Container visible={renameDialogVisible}>\n        <Dialog.Title style={{ color: 'black' }}>Rename file</Dialog.Title>\n        <Dialog.Input\n          textInputRef={renameInputRef}\n          value={decodeURI(newFileName)}\n          onChangeText={(text) => {\n            setNewFileName(text);\n          }}\n          onKeyPress={() => {\n            setInitialSelectionDone(true);\n          }}\n          selection={\n            !initialSelectionDone\n              ? { start: 0, end: decodeURI(newFileName).split('.')[0].length }\n              : undefined\n          }\n          style={{ color: 'black' }}\n        ></Dialog.Input>\n        <Dialog.Button\n          label=\"Cancel\"\n          onPress={() => {\n            setRenameDialogVisible(false);\n          }}\n        />\n        <Dialog.Button label=\"Rename\" onPress={() => onRename()} />\n      </Dialog.Container>\n      <GalleryDialog\n        dialogStyle={{\n          backgroundColor: colors.background2,\n        }}\n        animationType=\"slide\"\n        contentStyle={styles.contentStyle}\n        overlayStyle={styles.overlayStyle}\n        visible={multiImageVisible}\n        onTouchOutside={() => setMultiImageVisible(false)}\n      >\n        <Pickimages\n          onMultiSelectSubmit={onMultiSelectSubmit}\n          onClose={() => setMultiImageVisible(false)}\n        />\n      </GalleryDialog>\n\n      <ProgressDialog\n        visible={importProgressVisible}\n        title=\"Importing Assets\"\n        message=\"Please, wait...\"\n      />\n\n      <View style={styles.topButtons}>\n        <View style={styles.topLeft}>\n          <TouchableOpacity onPress={() => setCategorieDialogVisible(true)}>\n            <Feather name=\"inbox\" size={30} color={colors.primary} />\n          </TouchableOpacity>\n        </View>\n        {multiSelect && (\n          <View style={styles.topRight}>\n            <TouchableOpacity\n              onPress={() => {\n                setDestinationDialogVisible(true);\n                setMoveOrCopy('Move');\n              }}\n            >\n              <MaterialCommunityIcons\n                name=\"file-move-outline\"\n                size={30}\n                color={colors.primary}\n              />\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={toggleSelectAll}>\n              <Feather\n                style={{ marginLeft: 10 }}\n                name={allSelected ? 'check-square' : 'square'}\n                size={24}\n                color={colors.primary}\n              />\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n      <View style={{ ...styles.fileList, borderTopColor: colors.primary }}>\n        <FlatList\n          data={files}\n          showsVerticalScrollIndicator={false}\n          renderItem={renderItem}\n          keyExtractor={_keyExtractor}\n        />\n      </View>\n      {multiSelect && (\n        <View\n          style={{ ...styles.bottomMenu, backgroundColor: colors.background }}\n        >\n          <TouchableOpacity>\n            <MaterialCommunityIcons\n              name=\"export-variant\"\n              size={28}\n              color={colors.primary}\n            />\n          </TouchableOpacity>\n        </View>\n      )}\n      <ChatBox />\n    </View>\n  );\n};\n\nconst _keyExtractor = (item: fileItemCategorie) => item.name;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: SIZE,\n    paddingTop: Constants.statusBarHeight,\n  },\n  topButtons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 15,\n    marginHorizontal: 10,\n  },\n  topLeft: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '25%',\n  },\n  topRight: {\n    width: '75%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  fileList: {\n    flex: 1,\n    borderTopWidth: 0.5,\n    marginTop: 15,\n    marginHorizontal: 5,\n  },\n  bottomMenu: {\n    height: 45,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  contentStyle: {\n    width: SIZE,\n    height: HEIGHT * 0.8,\n    padding: 0,\n    margin: 0,\n  },\n  overlayStyle: {\n    width: SIZE,\n    padding: 0,\n    margin: 0,\n  },\n});\n\nexport default Categorie;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}