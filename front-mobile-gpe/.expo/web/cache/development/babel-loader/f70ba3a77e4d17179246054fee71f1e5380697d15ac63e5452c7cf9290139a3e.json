{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _ImagePicker = require(\"./ImagePicker.types\");\n\nvar _MediaTypeInput;\n\nvar MediaTypeInput = (_MediaTypeInput = {}, (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.Images, 'image/*'), (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nvar _default = {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n\n  launchImageLibraryAsync: function () {\n    var _launchImageLibraryAsync = (0, _asyncToGenerator2.default)(function* (_ref) {\n      var _ref$mediaTypes = _ref.mediaTypes,\n          mediaTypes = _ref$mediaTypes === void 0 ? _ImagePicker.MediaTypeOptions.Images : _ref$mediaTypes,\n          _ref$allowsMultipleSe = _ref.allowsMultipleSelection,\n          allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe,\n          _ref$base = _ref.base64,\n          base64 = _ref$base === void 0 ? false : _ref$base;\n\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        base64: base64\n      });\n    });\n\n    function launchImageLibraryAsync(_x) {\n      return _launchImageLibraryAsync.apply(this, arguments);\n    }\n\n    return launchImageLibraryAsync;\n  }(),\n  launchCameraAsync: function () {\n    var _launchCameraAsync = (0, _asyncToGenerator2.default)(function* (_ref2) {\n      var _ref2$mediaTypes = _ref2.mediaTypes,\n          mediaTypes = _ref2$mediaTypes === void 0 ? _ImagePicker.MediaTypeOptions.Images : _ref2$mediaTypes,\n          _ref2$allowsMultipleS = _ref2.allowsMultipleSelection,\n          allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS,\n          _ref2$base = _ref2.base64,\n          base64 = _ref2$base === void 0 ? false : _ref2$base;\n\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        capture: true,\n        base64: base64\n      });\n    });\n\n    function launchCameraAsync(_x2) {\n      return _launchCameraAsync.apply(this, arguments);\n    }\n\n    return launchCameraAsync;\n  }(),\n  getCameraPermissionsAsync: function () {\n    var _getCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return permissionGrantedResponse();\n    });\n\n    function getCameraPermissionsAsync() {\n      return _getCameraPermissionsAsync.apply(this, arguments);\n    }\n\n    return getCameraPermissionsAsync;\n  }(),\n  requestCameraPermissionsAsync: function () {\n    var _requestCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return permissionGrantedResponse();\n    });\n\n    function requestCameraPermissionsAsync() {\n      return _requestCameraPermissionsAsync.apply(this, arguments);\n    }\n\n    return requestCameraPermissionsAsync;\n  }(),\n  getMediaLibraryPermissionsAsync: function () {\n    var _getMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n\n    function getMediaLibraryPermissionsAsync(_x3) {\n      return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n\n    return getMediaLibraryPermissionsAsync;\n  }(),\n  requestMediaLibraryPermissionsAsync: function () {\n    var _requestMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n\n    function requestMediaLibraryPermissionsAsync(_x4) {\n      return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n\n    return requestMediaLibraryPermissionsAsync;\n  }()\n};\nexports.default = _default;\n\nfunction permissionGrantedResponse() {\n  return {\n    status: _expoModulesCore.PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\n\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n      _ref3$capture = _ref3.capture,\n      capture = _ref3$capture === void 0 ? false : _ref3$capture,\n      _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n      allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS,\n      base64 = _ref3.base64;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n\n  document.body.appendChild(input);\n  return new Promise(function (resolve) {\n    input.addEventListener('change', (0, _asyncToGenerator2.default)(function* () {\n      if (input.files) {\n        var files = allowsMultipleSelection ? input.files : [input.files[0]];\n        var assets = yield Promise.all(Array.from(files).map(function (file) {\n          return readFile(file, {\n            base64: base64\n          });\n        }));\n        resolve({\n          canceled: false,\n          assets: assets\n        });\n      } else {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      }\n\n      document.body.removeChild(input);\n    }));\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile, options) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onerror = function () {\n      reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n    };\n\n    reader.onload = function (_ref5) {\n      var target = _ref5.target;\n      var uri = target.result;\n\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0\n        });\n      };\n\n      if (typeof uri === 'string') {\n        var image = new Image();\n        image.src = uri;\n\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n\n          resolve(Object.assign({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) != null ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) != null ? _image$naturalHeight : image.height\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"mappings":"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","names":["MediaTypeInput","MediaTypeOptions","All","Images","Videos","name","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","base64","Platform","isDOMAvailable","canceled","assets","openFileBrowserAsync","launchCameraAsync","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","PermissionStatus","GRANTED","expires","granted","canAskAgain","mediaTypeFormat","input","document","createElement","style","display","setAttribute","String","Math","random","body","appendChild","Promise","resolve","addEventListener","files","all","Array","from","map","file","readFile","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reject","reader","FileReader","onerror","Error","onload","target","uri","result","returnRaw","width","height","image","Image","src","naturalWidth","naturalHeight","substr","indexOf","readAsDataURL"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-image-picker/src/ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () => {\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}