{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeColor = normalizeColor;\n\nvar _reactNative = require(\"react-native\");\n\nvar isWebColor = function isWebColor(color) {\n  return color === 'currentcolor' || color === 'currentColor' || color === 'inherit' || color.indexOf('var(') === 0;\n};\n\nfunction normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = (0, _reactNative.processColor)(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n  }\n}","map":{"version":3,"mappings":";;;;;AAOA;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;EAAA,OACjBA,KAAK,KAAK,cAAV,IACAA,KAAK,KAAK,cADV,IAEAA,KAAK,KAAK,SAFV,IAGAA,KAAK,CAACC,OAAN,CAAc,MAAd,MAA0B,CAJT;AAAA,CAAnB;;AAMM,SAAUC,cAAV,CAAyBF,KAAzB,EAAqE;EAAA,IAAnBG,OAAmB,uEAAD,CAAC;EACzE,IAAIH,KAAK,IAAI,IAAb,EAAmB;;EAEnB,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BD,UAAU,CAACC,KAAD,CAA3C,EAAoD;IAClD,OAAOA,KAAP;EACD;;EAED,IAAMI,QAAQ,GAAG,+BAAaJ,KAAb,CAAjB;;EACA,IAAII,QAAQ,IAAI,IAAhB,EAAsB;IACpB,IAAMC,CAAC,GAAID,QAAQ,IAAI,EAAb,GAAmB,GAA7B;IACA,IAAME,CAAC,GAAIF,QAAQ,IAAI,CAAb,GAAkB,GAA5B;IACA,IAAMG,CAAC,GAAGH,QAAQ,GAAG,GAArB;IACA,IAAMI,CAAC,GAAG,CAAEJ,QAAQ,IAAI,EAAb,GAAmB,GAApB,IAA2B,GAArC;IACA,IAAMK,KAAK,GAAG,CAACD,CAAC,GAAGL,OAAL,EAAcO,OAAd,CAAsB,CAAtB,CAAd;IACA,iBAAeL,CAAf,SAAoBC,CAApB,SAAyBC,CAAzB,SAA8BE,KAA9B;EACD;AACF","names":["isWebColor","color","indexOf","normalizeColor","opacity","colorInt","r","g","b","a","alpha","toFixed"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-linear-gradient/src/normalizeColor.ts"],"sourcesContent":["/**\n * Copyright (c) Expo.\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { processColor } from 'react-native';\n\nconst isWebColor = (color: string): boolean =>\n  color === 'currentcolor' ||\n  color === 'currentColor' ||\n  color === 'inherit' ||\n  color.indexOf('var(') === 0;\n\nexport function normalizeColor(color?: number | string, opacity: number = 1): void | string {\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  const colorInt = processColor(color) as number | undefined;\n  if (colorInt != null) {\n    const r = (colorInt >> 16) & 255;\n    const g = (colorInt >> 8) & 255;\n    const b = colorInt & 255;\n    const a = ((colorInt >> 24) & 255) / 255;\n    const alpha = (a * opacity).toFixed(2);\n    return `rgba(${r},${g},${b},${alpha})`;\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}