{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _default = {\n  get name() {\n    return 'ExpoSharing';\n  },\n\n  isAvailableAsync: function () {\n    var _isAvailableAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (typeof navigator === 'undefined') {\n        return false;\n      }\n\n      return !!navigator.share;\n    });\n\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n\n    return isAvailableAsync;\n  }(),\n  shareAsync: function () {\n    var _shareAsync = (0, _asyncToGenerator2.default)(function* (url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (navigator.share) {\n        yield navigator.share(Object.assign({}, options, {\n          url: url\n        }));\n      } else {\n        throw new _expoModulesCore.UnavailabilityError('navigator', 'share');\n      }\n    });\n\n    function shareAsync(_x) {\n      return _shareAsync.apply(this, arguments);\n    }\n\n    return shareAsync;\n  }()\n};\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;eAIe;EACb,IAAIA,IAAJ,GAAQ;IACN,OAAO,aAAP;EACD,CAHY;;EAIPC,gBAJO;IAAA,qEAIS;MACpB,IAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;QACpC,OAAO,KAAP;MACD;;MAED,OAAO,CAAC,CAACA,SAAS,CAACC,KAAnB;IACD,CAVY;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAWPC,UAXO;IAAA,6DAWIC,GAXJ,EAW2C;MAAA,IAA1BC,OAA0B,uEAAF,EAAE;;MAEtD,IAAIJ,SAAS,CAACC,KAAd,EAAqB;QACnB,MAAMD,SAAS,CAACC,KAAV,mBAAqBG,OAArB;UAA8BD,GAAG,EAAHA;QAA9B,GAAN;MACD,CAFD,MAEO;QACL,MAAM,IAAIE,oCAAJ,CAAwB,WAAxB,EAAqC,OAArC,CAAN;MACD;IACF,CAlBY;;IAAA;MAAA;IAAA;;IAAA;EAAA;AAAA,C","names":["name","isAvailableAsync","navigator","share","shareAsync","url","options","UnavailabilityError"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-sharing/src/ExpoSharing.web.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\ntype ShareOptions = { title?: string; text?: string; url?: string };\n\nexport default {\n  get name(): string {\n    return 'ExpoSharing';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n\n    return !!navigator.share;\n  },\n  async shareAsync(url: string, options: ShareOptions = {}): Promise<void> {\n    // NOTE: `navigator.share` is only available via HTTPS\n    if (navigator.share) {\n      await navigator.share({ ...options, url });\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}