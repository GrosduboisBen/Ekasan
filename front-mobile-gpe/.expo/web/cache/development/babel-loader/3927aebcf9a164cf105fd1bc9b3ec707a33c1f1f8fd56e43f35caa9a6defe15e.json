{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = NativeLinearGradient;\nexports.getLinearGradientBackgroundImage = getLinearGradientBackgroundImage;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _normalizeColor = require(\"./normalizeColor\");\n\nvar _excluded = [\"colors\", \"locations\", \"startPoint\", \"endPoint\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction NativeLinearGradient(_ref) {\n  var colors = _ref.colors,\n      locations = _ref.locations,\n      startPoint = _ref.startPoint,\n      endPoint = _ref.endPoint,\n      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      layout = _React$useState2[0],\n      setLayout = _React$useState2[1];\n\n  var _ref2 = layout != null ? layout : {},\n      _ref2$width = _ref2.width,\n      width = _ref2$width === void 0 ? 1 : _ref2$width,\n      _ref2$height = _ref2.height,\n      height = _ref2$height === void 0 ? 1 : _ref2$height;\n\n  var linearGradientBackgroundImage = React.useMemo(function () {\n    return getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint, width, height);\n  }, [colors, locations, startPoint, endPoint, width, height]);\n  return React.createElement(_reactNative.View, Object.assign({}, props, {\n    style: [props.style, {\n      backgroundImage: linearGradientBackgroundImage\n    }],\n    onLayout: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var oldLayout = layout != null ? layout : {\n        x: 0,\n        y: 0,\n        width: 1,\n        height: 1\n      };\n\n      if (x !== oldLayout.x || y !== oldLayout.y || width !== oldLayout.width || height !== oldLayout.height) {\n        setLayout({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }));\n}\n\nfunction getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint) {\n  var width = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var height = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var gradientColors = calculateGradientColors(colors, locations);\n  var angle = calculatePseudoAngle(width, height, startPoint, endPoint);\n  return \"linear-gradient(\" + angle + \"deg, \" + gradientColors.join(', ') + \")\";\n}\n\nfunction calculatePseudoAngle(width, height, startPoint, endPoint) {\n  var getControlPoints = function getControlPoints() {\n    var correctedStartPoint = [0, 0];\n\n    if (Array.isArray(startPoint)) {\n      correctedStartPoint = [startPoint[0] != null ? startPoint[0] : 0.0, startPoint[1] != null ? startPoint[1] : 0.0];\n    }\n\n    var correctedEndPoint = [0.0, 1.0];\n\n    if (Array.isArray(endPoint)) {\n      correctedEndPoint = [endPoint[0] != null ? endPoint[0] : 0.0, endPoint[1] != null ? endPoint[1] : 1.0];\n    }\n\n    return [correctedStartPoint, correctedEndPoint];\n  };\n\n  var _getControlPoints = getControlPoints(),\n      _getControlPoints2 = (0, _slicedToArray2.default)(_getControlPoints, 2),\n      start = _getControlPoints2[0],\n      end = _getControlPoints2[1];\n\n  start[0] *= width;\n  end[0] *= width;\n  start[1] *= height;\n  end[1] *= height;\n  var py = end[1] - start[1];\n  var px = end[0] - start[0];\n  return 90 + Math.atan2(py, px) * 180 / Math.PI;\n}\n\nfunction calculateGradientColors(colors, locations) {\n  return colors.map(function (color, index) {\n    var hexColor = (0, _normalizeColor.normalizeColor)(color);\n    var output = hexColor;\n\n    if (locations && locations[index]) {\n      var location = Math.max(0, Math.min(1, locations[index]));\n      var percentage = location * 100;\n      output += \" \" + percentage + \"%\";\n    }\n\n    return output;\n  });\n}","map":{"version":3,"mappings":"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","names":["NativeLinearGradient","colors","locations","startPoint","endPoint","props","React","useState","layout","setLayout","width","height","linearGradientBackgroundImage","useMemo","getLinearGradientBackgroundImage","View","style","backgroundImage","onLayout","event","nativeEvent","x","y","oldLayout","gradientColors","calculateGradientColors","angle","calculatePseudoAngle","join","getControlPoints","correctedStartPoint","Array","isArray","correctedEndPoint","start","end","py","px","Math","atan2","PI","map","color","index","hexColor","output","location","max","min","percentage"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-linear-gradient/src/NativeLinearGradient.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\nimport { normalizeColor } from './normalizeColor';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  const linearGradientBackgroundImage = React.useMemo(() => {\n    return getLinearGradientBackgroundImage(colors, locations, startPoint, endPoint, width, height);\n  }, [colors, locations, startPoint, endPoint, width, height]);\n\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage: linearGradientBackgroundImage },\n      ]}\n      onLayout={(event) => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n\n/**\n * Extracted to a separate function in order to be able to test logic independently.\n */\nexport function getLinearGradientBackgroundImage(\n  colors: number[] | string[],\n  locations?: number[] | null,\n  startPoint?: NativeLinearGradientPoint | null,\n  endPoint?: NativeLinearGradientPoint | null,\n  width: number = 1,\n  height: number = 1\n) {\n  const gradientColors = calculateGradientColors(colors, locations);\n  const angle = calculatePseudoAngle(width, height, startPoint, endPoint);\n  return `linear-gradient(${angle}deg, ${gradientColors.join(', ')})`;\n}\n\nfunction calculatePseudoAngle(\n  width: number,\n  height: number,\n  startPoint?: NativeLinearGradientPoint | null,\n  endPoint?: NativeLinearGradientPoint | null\n) {\n  const getControlPoints = (): NativeLinearGradientPoint[] => {\n    let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n    if (Array.isArray(startPoint)) {\n      correctedStartPoint = [\n        startPoint[0] != null ? startPoint[0] : 0.0,\n        startPoint[1] != null ? startPoint[1] : 0.0,\n      ];\n    }\n    let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n    if (Array.isArray(endPoint)) {\n      correctedEndPoint = [\n        endPoint[0] != null ? endPoint[0] : 0.0,\n        endPoint[1] != null ? endPoint[1] : 1.0,\n      ];\n    }\n    return [correctedStartPoint, correctedEndPoint];\n  };\n\n  const [start, end] = getControlPoints();\n  start[0] *= width;\n  end[0] *= width;\n  start[1] *= height;\n  end[1] *= height;\n  const py = end[1] - start[1];\n  const px = end[0] - start[0];\n\n  return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n}\n\nfunction calculateGradientColors(colors: number[] | string[], locations?: number[] | null) {\n  return colors.map((color: number | string, index: number): string | void => {\n    const hexColor = normalizeColor(color);\n    let output = hexColor;\n    if (locations && locations[index]) {\n      const location = Math.max(0, Math.min(1, locations[index]));\n      // Convert 0...1 to 0...100\n      const percentage = location * 100;\n      output += ` ${percentage}%`;\n    }\n    return output;\n  });\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}