{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MediaTypeOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.MediaTypeOptions;\n  }\n});\nObject.defineProperty(exports, \"PermissionStatus\", {\n  enumerable: true,\n  get: function get() {\n    return _expoModulesCore.PermissionStatus;\n  }\n});\nObject.defineProperty(exports, \"UIImagePickerControllerQualityType\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.UIImagePickerControllerQualityType;\n  }\n});\nObject.defineProperty(exports, \"UIImagePickerPresentationStyle\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.UIImagePickerPresentationStyle;\n  }\n});\nObject.defineProperty(exports, \"VideoExportPreset\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.VideoExportPreset;\n  }\n});\nexports.getCameraPermissionsAsync = getCameraPermissionsAsync;\nexports.getMediaLibraryPermissionsAsync = getMediaLibraryPermissionsAsync;\nexports.getPendingResultAsync = getPendingResultAsync;\nexports.launchCameraAsync = launchCameraAsync;\nexports.launchImageLibraryAsync = launchImageLibraryAsync;\nexports.requestCameraPermissionsAsync = requestCameraPermissionsAsync;\nexports.requestMediaLibraryPermissionsAsync = requestMediaLibraryPermissionsAsync;\nexports.useMediaLibraryPermissions = exports.useCameraPermissions = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _ExponentImagePicker = _interopRequireDefault(require(\"./ExponentImagePicker\"));\n\nvar _ImagePicker = require(\"./ImagePicker.types\");\n\nfunction validateOptions(options) {\n  var aspect = options.aspect,\n      quality = options.quality,\n      videoMaxDuration = options.videoMaxDuration;\n\n  if (aspect != null) {\n    var _aspect = (0, _slicedToArray2.default)(aspect, 2),\n        x = _aspect[0],\n        y = _aspect[1];\n\n    if (x <= 0 || y <= 0) {\n      throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid aspect ratio values \" + x + \":\" + y + \". Provide positive numbers.\");\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'quality' value \" + quality + \". Provide a value between 0 and 1.\");\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'videoMaxDuration' value \" + videoMaxDuration + \". Provide a non-negative number.\");\n  }\n\n  return options;\n}\n\nvar DEPRECATED_RESULT_KEYS = ['uri', 'assetId', 'width', 'height', 'type', 'exif', 'base64', 'duration', 'fileName', 'fileSize'];\n\nfunction mergeDeprecatedResult(result) {\n  var _result$assets;\n\n  var firstAsset = (_result$assets = result.assets) == null ? void 0 : _result$assets[0];\n  var deprecatedResult = Object.assign({}, result, {\n    get cancelled() {\n      console.warn('Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead');\n      return this.canceled;\n    }\n\n  });\n\n  var _loop = function _loop(key) {\n    Object.defineProperty(deprecatedResult, key, {\n      get: function get() {\n        console.warn(\"Key \\\"\" + key + \"\\\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \\\"assets\\\" array instead\");\n        return firstAsset == null ? void 0 : firstAsset[key];\n      }\n    });\n  };\n\n  for (var key of DEPRECATED_RESULT_KEYS) {\n    _loop(key);\n  }\n\n  return deprecatedResult;\n}\n\nfunction getCameraPermissionsAsync() {\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\n\nfunction _getCameraPermissionsAsync() {\n  _getCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n    return _ExponentImagePicker.default.getCameraPermissionsAsync();\n  });\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\n\nfunction getMediaLibraryPermissionsAsync() {\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\n\nfunction _getMediaLibraryPermissionsAsync() {\n  _getMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return _ExponentImagePicker.default.getMediaLibraryPermissionsAsync(writeOnly);\n  });\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\n\nfunction requestCameraPermissionsAsync() {\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\n\nfunction _requestCameraPermissionsAsync() {\n  _requestCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n    return _ExponentImagePicker.default.requestCameraPermissionsAsync();\n  });\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\n\nfunction requestMediaLibraryPermissionsAsync() {\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\n\nfunction _requestMediaLibraryPermissionsAsync() {\n  _requestMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var imagePickerMethod = _ExponentImagePicker.default.requestMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n  });\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\n\nvar useMediaLibraryPermissions = (0, _expoModulesCore.createPermissionHook)({\n  getMethod: function getMethod(options) {\n    return getMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  },\n  requestMethod: function requestMethod(options) {\n    return requestMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  }\n});\nexports.useMediaLibraryPermissions = useMediaLibraryPermissions;\nvar useCameraPermissions = (0, _expoModulesCore.createPermissionHook)({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexports.useCameraPermissions = useCameraPermissions;\n\nfunction getPendingResultAsync() {\n  return _getPendingResultAsync.apply(this, arguments);\n}\n\nfunction _getPendingResultAsync() {\n  _getPendingResultAsync = (0, _asyncToGenerator2.default)(function* () {\n    if (_ExponentImagePicker.default.getPendingResultAsync) {\n      return _ExponentImagePicker.default.getPendingResultAsync();\n    }\n\n    return [];\n  });\n  return _getPendingResultAsync.apply(this, arguments);\n}\n\nfunction launchCameraAsync() {\n  return _launchCameraAsync.apply(this, arguments);\n}\n\nfunction _launchCameraAsync() {\n  _launchCameraAsync = (0, _asyncToGenerator2.default)(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!_ExponentImagePicker.default.launchCameraAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n\n    var result = yield _ExponentImagePicker.default.launchCameraAsync(validateOptions(options));\n    return mergeDeprecatedResult(result);\n  });\n  return _launchCameraAsync.apply(this, arguments);\n}\n\nfunction launchImageLibraryAsync(_x) {\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\n\nfunction _launchImageLibraryAsync() {\n  _launchImageLibraryAsync = (0, _asyncToGenerator2.default)(function* (options) {\n    if (!_ExponentImagePicker.default.launchImageLibraryAsync) {\n      throw new _expoModulesCore.UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n\n    if (options != null && options.allowsEditing && options.allowsMultipleSelection) {\n      console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' + \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" + 'to fix this warning.');\n    }\n\n    var result = yield _ExponentImagePicker.default.launchImageLibraryAsync(options != null ? options : {});\n    return mergeDeprecatedResult(result);\n  });\n  return _launchImageLibraryAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["validateOptions","options","aspect","quality","videoMaxDuration","x","y","CodedError","DEPRECATED_RESULT_KEYS","mergeDeprecatedResult","result","firstAsset","assets","deprecatedResult","cancelled","console","warn","canceled","key","Object","defineProperty","get","getCameraPermissionsAsync","ExponentImagePicker","getMediaLibraryPermissionsAsync","writeOnly","requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","imagePickerMethod","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","launchCameraAsync","UnavailabilityError","launchImageLibraryAsync","allowsEditing","allowsMultipleSelection"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/expo-image-picker/src/ImagePicker.ts"],"sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerAsset,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\nconst DEPRECATED_RESULT_KEYS = [\n  'uri',\n  'assetId',\n  'width',\n  'height',\n  'type',\n  'exif',\n  'base64',\n  'duration',\n  'fileName',\n  'fileSize',\n];\nfunction mergeDeprecatedResult(result: ImagePickerResult): ImagePickerResult {\n  const firstAsset = result.assets?.[0];\n  const deprecatedResult = {\n    ...result,\n    get cancelled() {\n      console.warn(\n        'Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead'\n      );\n      return this.canceled;\n    },\n  };\n  for (const key of DEPRECATED_RESULT_KEYS) {\n    Object.defineProperty(deprecatedResult, key, {\n      get() {\n        console.warn(\n          `Key \"${key}\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \"assets\" array instead`\n        );\n        return firstAsset?.[key];\n      },\n    });\n  }\n  return deprecatedResult;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  const result = await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n  return mergeDeprecatedResult(result);\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be     called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n *\n * **Animated GIFs support:** On Android, if the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is explicitly set to `1.0` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG). On iOS, both quality and cropping are supported.\n *\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchImageLibraryAsync(\n  options?: ImagePickerOptions\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  const result = await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n  return mergeDeprecatedResult(result);\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  ImagePickerAsset,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  ImageInfo, // deprecated\n  ImagePickerMultipleResult, // deprecated\n  ImagePickerCancelledResult, // deprecated\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult, // deprecated\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}