{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderSegment;\nexports.getDefaultHeaderHeight = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _TouchableItem = _interopRequireDefault(require(\"./TouchableItem\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getDefaultHeaderHeight = function getDefaultHeaderHeight(layout, statusBarHeight) {\n  var isLandscape = layout.width > layout.height;\n  var headerHeight;\n\n  if (_reactNative.Platform.OS === 'ios') {\n    if (isLandscape && !_reactNative.Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (_reactNative.Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexports.getDefaultHeaderHeight = getDefaultHeaderHeight;\n\nfunction HeaderSegment(_ref) {\n  var scene = _ref.scene,\n      layout = _ref.layout;\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var _scene$descriptor$opt = scene.descriptor.options,\n      title = _scene$descriptor$opt.title,\n      headerTitle = _scene$descriptor$opt.headerTitle,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerTitleAlign,\n      headerTitleAlign = _scene$descriptor$opt2 === void 0 ? _reactNative.Platform.select({\n    ios: 'center',\n    default: 'left'\n  }) : _scene$descriptor$opt2,\n      headerLeft = _scene$descriptor$opt.headerLeft,\n      headerLeftAccessibilityLabel = _scene$descriptor$opt.headerLeftAccessibilityLabel,\n      headerRight = _scene$descriptor$opt.headerRight,\n      headerTitleAllowFontScaling = _scene$descriptor$opt.headerTitleAllowFontScaling,\n      headerTitleStyle = _scene$descriptor$opt.headerTitleStyle,\n      headerTintColor = _scene$descriptor$opt.headerTintColor,\n      headerPressColorAndroid = _scene$descriptor$opt.headerPressColorAndroid,\n      headerStyle = _scene$descriptor$opt.headerStyle,\n      _scene$descriptor$opt3 = _scene$descriptor$opt.headerStatusBarHeight,\n      headerStatusBarHeight = _scene$descriptor$opt3 === void 0 ? insets.top : _scene$descriptor$opt3;\n  var currentTitle = typeof headerTitle !== 'function' && headerTitle !== undefined ? headerTitle : title !== undefined ? title : scene.route.name;\n  var defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n  var leftButton = headerLeft ? headerLeft({\n    tintColor: headerTintColor\n  }) : React.createElement(_TouchableItem.default, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: headerLeftAccessibilityLabel,\n    accessibilityTraits: \"button\",\n    delayPressIn: 0,\n    onPress: function onPress() {\n      return scene.descriptor.navigation.dispatch(_native.DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    pressColor: headerPressColorAndroid,\n    hitSlop: _reactNative.Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(_reactNative.Image, {\n    style: [styles.icon, headerTintColor ? {\n      tintColor: headerTintColor\n    } : null],\n    source: require('./assets/toggle-drawer-icon.png'),\n    fadeDuration: 0\n  }));\n  var rightButton = headerRight ? headerRight({\n    tintColor: headerTintColor\n  }) : null;\n  return React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [{\n      height: defaultHeight,\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, styles.container, headerStyle]\n  }, React.createElement(_reactNative.View, {\n    pointerEvents: \"none\",\n    style: {\n      height: headerStatusBarHeight\n    }\n  }), React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: styles.content\n  }, leftButton ? React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.left, {\n      left: insets.left\n    }]\n  }, leftButton) : null, React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [headerTitleAlign === 'left' ? {\n      position: 'absolute',\n      left: (leftButton ? 72 : 16) + insets.left,\n      right: (rightButton ? 72 : 16) + insets.right\n    } : {\n      marginHorizontal: (leftButton ? 32 : 16) + Math.max(insets.left, insets.right)\n    }]\n  }, typeof headerTitle === 'function' ? headerTitle({\n    children: currentTitle,\n    allowFontScaling: headerTitleAllowFontScaling,\n    tintColor: headerTintColor,\n    style: headerTitleStyle\n  }) : React.createElement(_reactNative.Text, {\n    accessibilityRole: \"header\",\n    \"aria-level\": \"1\",\n    numberOfLines: 1,\n    allowFontScaling: headerTitleAllowFontScaling,\n    style: [styles.title, {\n      color: headerTintColor !== null && headerTintColor !== void 0 ? headerTintColor : colors.text\n    }, styles.title, headerTitleStyle]\n  }, currentTitle)), rightButton ? React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.right, {\n      right: insets.right\n    }]\n  }, rightButton) : null));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: Object.assign({}, _reactNative.Platform.select({\n    android: {\n      elevation: 4\n    },\n    ios: {\n      shadowOpacity: 0.85,\n      shadowRadius: 0,\n      shadowOffset: {\n        width: 0,\n        height: _reactNative.StyleSheet.hairlineWidth\n      }\n    },\n    default: {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth\n    }\n  }), {\n    zIndex: 1\n  }),\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: _reactNative.Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"mappings":"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","names":["getDefaultHeaderHeight","layout","statusBarHeight","isLandscape","width","height","headerHeight","Platform","OS","isPad","HeaderSegment","scene","insets","useSafeAreaInsets","useTheme","colors","descriptor","options","title","headerTitle","headerTitleAlign","select","ios","default","headerLeft","headerLeftAccessibilityLabel","headerRight","headerTitleAllowFontScaling","headerTitleStyle","headerTintColor","headerPressColorAndroid","headerStyle","headerStatusBarHeight","top","currentTitle","undefined","route","name","defaultHeight","leftButton","tintColor","React","TouchableItem","accessible","accessibilityRole","accessibilityComponentType","accessibilityLabel","accessibilityTraits","delayPressIn","onPress","navigation","dispatch","DrawerActions","toggleDrawer","style","styles","touchable","pressColor","hitSlop","right","bottom","left","borderless","Image","icon","source","require","fadeDuration","rightButton","View","pointerEvents","backgroundColor","card","borderBottomColor","border","shadowColor","container","content","position","marginHorizontal","Math","max","children","allowFontScaling","Text","numberOfLines","color","text","StyleSheet","create","android","elevation","shadowOpacity","shadowRadius","shadowOffset","hairlineWidth","borderBottomWidth","zIndex","flex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","margin","resizeMode"],"sources":["/Users/kevin/Desktop/group-1010001/front-mobile-gpe/node_modules/@react-navigation/drawer/lib/module/views/Header.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Text, View, Image, StyleSheet, Platform } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\nimport type { Layout, DrawerHeaderProps } from '../types';\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment({ scene, layout }: DrawerHeaderProps) {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = scene.descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== 'function' && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft ? (\n    headerLeft({ tintColor: headerTintColor })\n  ) : (\n    <TouchableItem\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={headerLeftAccessibilityLabel}\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={() =>\n        scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer())\n      }\n      style={styles.touchable}\n      pressColor={headerPressColorAndroid}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <Image\n        style={[\n          styles.icon,\n          headerTintColor ? { tintColor: headerTintColor } : null,\n        ]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </TouchableItem>\n  );\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === 'left'\n              ? {\n                  position: 'absolute',\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === 'function' ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}